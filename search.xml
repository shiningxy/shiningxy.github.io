<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>LeetCode 118.杨辉三角</title>
    <url>/2020/09/06/LeetCode118/</url>
    <content><![CDATA[<h1 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h1><p>给定一个非负整数 numRows，生成杨辉三角的前 numRows 行。</p>
<a id="more"></a>
<p><img src="https://s1.ax1x.com/2020/09/06/wmJfmt.gif" alt="wmJfmt.gif"></p>
<p>在杨辉三角中，每个数是它左上方和右上方的数的和。</p>
<p>示例:</p>
<p>输入: 5</p>
<p>输出:<br>[\<br>&emsp;&emsp;&ensp;[1],\<br>&emsp;&emsp;[1,1],\<br>&emsp;&ensp;[1,2,1],\<br>&emsp;[1,3,3,1],\<br>&ensp;[1,4,6,4,1]\<br>]</p>
<p>来源：力扣（LeetCode）<br>链接：<a href="https://leetcode-cn.com/problems/pascals-triangle" target="_blank" rel="noopener">https://leetcode-cn.com/problems/pascals-triangle</a><br>著作权归领扣网络所有。商业转载请联系官方授权，非商业转载请注明出处。</p>
<h1 id="题解"><a href="#题解" class="headerlink" title="题解"></a>题解</h1><h2 id="动态规划"><a href="#动态规划" class="headerlink" title="动态规划"></a>动态规划</h2><pre><code>class Solution{
  public List&lt;List&lt;Integer&gt;&gt; generate(int numRows){
    List&lt;List&lt;Integer&gt;&gt; triangle = new ArrayList&lt;List&lt;Integer&gt;&gt;();

    //First base case; if user zero rows, they get zero rows.
    if(numRows == 0) {
      return triangle;
    }

    //Second base case; first row is always [1].
    triangle.add(new ArrayList&lt;&gt;());
    triangle.get(0).add(1);

    for (int rowNum = 1; rowNum &lt; numRows; rowNum++){
      List&lt;Integer&gt; row = new ArrayList&lt;&gt;();
      List&lt;Integer&gt; prevRow = triangle.get(rowNum-1);

      //The first row element is always 1.
      row.add(1);

      // Each triangle element (other than the first and last of each row)
      // is equal to the sum of the elements above-and-to-the-left and
      // above-and-to-the-right.
      for(int j=1;j&lt;rowNum;j++){
        row.add(prevRow.get(j-1) + prevRow.get(j));
      }

      //The last row element is always 1.
      row.add(1);

      triangle.add(row);

    }

    return triangle;
  }
}
</code></pre><h2 id="复杂度分析"><a href="#复杂度分析" class="headerlink" title="复杂度分析"></a>复杂度分析</h2><ul>
<li>时间复杂度：$O(numRows^2)O(numRows 2)$</li>
</ul>
<p>虽然更新<code>triangle</code>中的每个值都是在常量时间内发生的，但它会被执行$O(numRows^2)O(numRows^2)$次。</p>
<p>想要了解原因，就需要考虑总共有多少次循环迭代。很明显外层循环需要运行$numRows$次,但在外层循环的每次迭代中，内层循环要运行$rowNum$次。</p>
<p>因此，<code>triangle</code>发生的更新总数为$1 + 2 + 3 + \ldots + numRows1+2+3+…+numRows$，根据高斯公式有</p>
<script type="math/tex; mode=display">
\frac{numsRows(numRows+1)}{2}= \frac{numsRows^2+numRows}{2}=\frac{numsRows^2}{2}+\frac{numRows}{2}=O(numRows^2)</script><p>空间复杂度：$O(numRows^2)O(numRows^2)$</p>
<p>因为我们需要存储我们在<code>triangle</code>中更新的每个数字，所以空间需求与时间复杂度相同。</p>
]]></content>
      <categories>
        <category>刷题笔记</category>
      </categories>
      <tags>
        <tag>数组</tag>
      </tags>
  </entry>
  <entry>
    <title>LeetCode 88.合并两个有序数组</title>
    <url>/2020/09/06/Leetcode88/</url>
    <content><![CDATA[<h1 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h1><p>给你两个有序整数数组 nums1 和 nums2，请你将 nums2 合并到 nums1 中，使 nums1 成为一个有序数组。</p>
<a id="more"></a>
<h2 id="说明"><a href="#说明" class="headerlink" title="说明"></a>说明</h2><p>初始化 nums1 和 nums2 的元素数量分别为 m 和 n 。<br>你可以假设 nums1 有足够的空间（空间大小大于或等于 m + n）来保存 nums2 中的元素。</p>
<h2 id="示例"><a href="#示例" class="headerlink" title="示例"></a>示例</h2><p>输入:<br>nums1 = [1,2,3,0,0,0], m = 3<br>nums2 = [2,5,6],       n = 3</p>
<p>输出: [1,2,2,3,5,6]</p>
<p>来源：力扣（LeetCode）<br>链接：<a href="https://leetcode-cn.com/problems/merge-sorted-array" target="_blank" rel="noopener">https://leetcode-cn.com/problems/merge-sorted-array</a><br>著作权归领扣网络所有。商业转载请联系官方授权，非商业转载请注明出处。</p>
<h1 id="题解"><a href="#题解" class="headerlink" title="题解"></a>题解</h1><h2 id="0x01-合并后排序"><a href="#0x01-合并后排序" class="headerlink" title="0x01 合并后排序"></a>0x01 合并后排序</h2><h3 id="直觉"><a href="#直觉" class="headerlink" title="直觉"></a>直觉</h3><p>最朴素的解法就是将两个数组合并之后再排序。该算法只需要一行（Java是2行），时间复杂度较差，为$O((n+m)log(n+m))$。这是由于这种方法没有利用两个数组本身已经有序这一点。</p>
<h3 id="实现"><a href="#实现" class="headerlink" title="实现"></a>实现</h3><pre><code>class Solution {
  public void merge(int[] nums1, int m, int[] nums, int n){
    System.arraycopy(nums2, 0, nums1, m, n);
    Arrays.sort(nums1);
  }
}
</code></pre><h3 id="复杂度分析"><a href="#复杂度分析" class="headerlink" title="复杂度分析"></a>复杂度分析</h3><ul>
<li>时间复杂度：$O((n+m)log(n+m))$</li>
<li>空间复杂度：$O(1)$</li>
</ul>
<h2 id="0x02-双指针-从前往后"><a href="#0x02-双指针-从前往后" class="headerlink" title="0x02 双指针/从前往后"></a>0x02 双指针/从前往后</h2><h3 id="直觉-1"><a href="#直觉-1" class="headerlink" title="直觉"></a>直觉</h3><p>一般而言，对于有序数组可以通过 <em>双指针法</em> 达到$O(n+m)$的时间复杂度。</p>
<p>最直接的算法实现是将指针<code>p1</code>置为<code>nums1</code>的开头，<code>p2</code>为<code>nums2</code>的开头，在每一步将最小值放入输出数组中。</p>
<p>由于<code>nums1</code>是用于输出的数组，需要将<code>nums1</code>中的前<code>m</code>个元素放在其他地方，也就需要$O(m)$的空间复杂度。</p>
<p><img src="https://s1.ax1x.com/2020/09/06/wZMyvT.png" alt="wZMyvT.png"></p>
<h3 id="实现-1"><a href="#实现-1" class="headerlink" title="实现"></a>实现</h3><pre><code>class Solution{
  public void merge(int[] nums1, int m, int[] nums2, int n){
    // Make a copy of nums1
    int [] nums1_copy = new int[m];
    System.arraycopy(nums1, 0, nums1_copy, 0, m);

    // Two get pointers for nums1_copy and nums2.
    int p1=0;
    int p2=0;

    // Set pointer for nums1
    int p=0;

    // Compare elements from nums1_copy and nums2
    // and add the smallest one into nums1.
    while((p1&lt;m)&amp;&amp;(p2&lt;n))
      nums1[p++] = (nums1_copy[p1] &lt; nums2[p2]) ? nums1_copy[p1++] : nums2[p2++];

    // if there are still elements to add
    if (p1 &lt; m)
      System.arraycopy(nums1_copy, p1, nums1, p1 + p2, m + n - p1 - p2);
    if (p2 &lt; m)
      System.arraycopy(nums2, p2, nums1, p1 + p2, m + n - p1 - p2);
  }
}
</code></pre><h3 id="复杂度分析-1"><a href="#复杂度分析-1" class="headerlink" title="复杂度分析"></a>复杂度分析</h3><ul>
<li>时间复杂度：$O(n+m)$</li>
<li>空间复杂度：$O(m)$</li>
</ul>
<h2 id="0x03-双指针-从后向前"><a href="#0x03-双指针-从后向前" class="headerlink" title="0x03 双指针/从后向前 "></a><font color="#FF0000">0x03 双指针/从后向前 </font></h2><h3 id="直觉-2"><a href="#直觉-2" class="headerlink" title="直觉"></a>直觉</h3><p>方法0x02已经取得了最优的时间复杂度$O(n+m)$，但需要使用额外空间。这是由于从头改变<code>nums1</code>的值时，需要把<code>nums1</code>中的元素存放在其他位置</p>
<blockquote>
<p>如果我们从结尾开始改写<code>nums1</code>的值又会如何呢？这里没有信息，因此不需要额外空间。</p>
</blockquote>
<p>这里的指针<code>p</code>用于追踪添加元素的位置。</p>
<p><img src="https://s1.ax1x.com/2020/09/06/wZlwpq.png" alt="wZlwpq.png"><br><img src="https://s1.ax1x.com/2020/09/06/wZlY7Q.png" alt="wZlY7Q.png"><br><img src="https://s1.ax1x.com/2020/09/06/wZlNkj.png" alt="wZlNkj.png"><br><img src="https://s1.ax1x.com/2020/09/06/wZlUts.png" alt="wZlUts.png"><br><img src="https://s1.ax1x.com/2020/09/06/wZlahn.png" alt="wZlahn.png"><br><img src="https://s1.ax1x.com/2020/09/06/wZl010.png" alt="wZl010.png"></p>
<h3 id="实现-2"><a href="#实现-2" class="headerlink" title="实现"></a>实现</h3><pre><code>class Solution {
  public void merge(int[] nums1, int m, int[] nums2, int n) {
    // two get pointers for nums1 and nums2
    int p1 = m - 1;
    int p2 = n - 1;
    // set pointer for nums1
    int p = m + n - 1;

    // while there are still elements to compare
    while ((p1 &gt;= 0) &amp;&amp; (p2 &gt;= 0))
    // compare two elements from nums1 and nums2 
    // and add the largest one in nums1 
    nums1[p--] = (nums1[p1] &lt; nums2[p2]) ? nums2[p2--] : nums1[p1--];

    // add missing elements from nums2
    System.arraycopy(nums2, 0, nums1, 0, p2 + 1);
  }
}
</code></pre><h3 id="复杂度分析-2"><a href="#复杂度分析-2" class="headerlink" title="复杂度分析"></a>复杂度分析</h3><ul>
<li>时间复杂度：$O(n+m)$</li>
<li>空间复杂度：$O(1)$</li>
</ul>
]]></content>
      <categories>
        <category>刷题笔记</category>
      </categories>
      <tags>
        <tag>数组</tag>
        <tag>双指针</tag>
      </tags>
  </entry>
  <entry>
    <title>支持向量机（非线性模型）</title>
    <url>/2020/08/30/%E6%94%AF%E6%8C%81%E5%90%91%E9%87%8F%E6%9C%BA%EF%BC%88%E9%9D%9E%E7%BA%BF%E6%80%A7%E6%A8%A1%E5%9E%8B%EF%BC%89/</url>
    <content><![CDATA[<p>浙江大学机器学习课程笔记归纳<br><a id="more"></a></p>
<h1 id="课程回顾"><a href="#课程回顾" class="headerlink" title="课程回顾"></a>课程回顾</h1><p>SVM是最大化间隔(Margin)的分类算法</p>
<p>优化问题：训练样本</p>
<script type="math/tex; mode=display">
\left \{ \left ( x_i,y_i \right) \right \} _ {i=1 \sim N}</script><p>最小化：</p>
<script type="math/tex; mode=display">
\frac{1}{2}\left \| \omega \right \|^2</script><p>限制条件：</p>
<script type="math/tex; mode=display">
y_i[\omega^Tx_i+b]\ge1(i=1 \sim n)</script><blockquote>
<p>如果上述训练样本线性可分，则一定可以做出一条线将他们分开。同时最小值一定有解。</p>
<p>如果不是线性可分，则最小值一定无解</p>
<p>非线性模型则改变最优化的问题，使它在非线性的情况下也有最优解</p>
</blockquote>
<h1 id="SVM处理非线性"><a href="#SVM处理非线性" class="headerlink" title="SVM处理非线性"></a>SVM处理非线性</h1><h2 id="最小化："><a href="#最小化：" class="headerlink" title="最小化："></a><strong>最小化：</strong></h2><script type="math/tex; mode=display">
\frac{1}{2}\left \| \omega \right \|^2 +C\sum_{i=1}^{n} \xi_i</script><p>($\xi_i$为松弛变量Slack Variable)</p>
<p>($C\sum_{i=1}^{n} \xi_i$为正则项Regulation Term)</p>
<p>(正则项中的$C$是事先设定的参数，是用来平衡$\omega$项和正则项在最后的目标函数中的权重)</p>
<h2 id="限制条件："><a href="#限制条件：" class="headerlink" title="限制条件："></a><strong>限制条件：</strong></h2><script type="math/tex; mode=display">
y_i[\omega^Tx_i+b]\ge1-\xi_i(i=1\sim n)\\
\xi_i\ge0</script><blockquote>
<p>要限制$\xi_i$不能特别大，否则限制条件虽然会被满足，但优化问题会变得非常发散</p>
</blockquote>
<h1 id="低维到高维映射"><a href="#低维到高维映射" class="headerlink" title="低维到高维映射"></a>低维到高维映射</h1><p>高维映射$\varphi(x)$：<code>把低维的矢量映射到高维，在高维里面找直线</code></p>
<script type="math/tex; mode=display">x \rightarrow \varphi(x)</script><p>考虑如下异或问题</p>
<p><a href="https://imgchr.com/i/wPhKER" target="_blank" rel="noopener"><img src="https://s1.ax1x.com/2020/09/03/wPhKER.th.png" alt="wPhKER.th.png"></a></p>
<script type="math/tex; mode=display">
x_1=\begin{bmatrix}
0\\
0\end{bmatrix}\in C_1

x_2=\begin{bmatrix}
1\\
1\end{bmatrix}\in C_1
\\
x_3=\begin{bmatrix}
1\\
0\end{bmatrix}\in C_2

x_4=\begin{bmatrix}
0\\
1\end{bmatrix}\in C_2</script><p>该例子属于线性不可分，但如果我们定义由二维至五维的映射$\varphi(x)$</p>
<script type="math/tex; mode=display">
{\color{RoyalBlue}\varphi(x):x=\begin{bmatrix}
a\\
b
\end{bmatrix}
\to
\varphi(x)=\begin{bmatrix}
a^2\\
b^2\\
a\\
b\\
ab\end{bmatrix}}
\\
则有：
\varphi(x_1)=\begin{bmatrix}
0\\
0\\
0\\
0\\
0\end{bmatrix}\in {\color{Purple}C_1}
\varphi(x_2)=\begin{bmatrix}
1\\
1\\
1\\
1\\
1\end{bmatrix}\in {\color{Purple}C_1}
\\
\varphi(x_3)=\begin{bmatrix}
1\\
0\\
1\\
0\\
0\end{bmatrix}\in {\color{Orange}C_2}
\varphi(x_4)=\begin{bmatrix}
0\\
1\\
0\\
1\\
0\end{bmatrix}\in {\color{Orange}C_2}
\\
对于以上的\varphi(x_i)的值,需要给出\omega和b的值\\使限制条件{\color{RoyalBlue}y_i[\omega^T\varphi(x_i)+b]\ge1(i=1 \sim n)}成立\\
可以设
\omega=\begin{bmatrix}
-1\\
-1\\
-1\\
-1\\
6\end{bmatrix}
b=1
\\
则：\\
\omega^T\varphi(x_1)+b=1 \in C_1\\
\omega^T\varphi(x_2)+b=3 \in C_1\\
\omega^T\varphi(x_3)+b=-1 \in C_2\\
\omega^T\varphi(x_4)+b=-1 \in C_2\\</script><pre><code>在特征空间里随机的选一些点，同时把所选的点随机的标上圆圈和叉，在越高维的特征空间里做这个操作，这些点被线性分开的概率越大。
在无限维的特征空间里做这个操作，被线性分开的概率是1
</code></pre><p>$\varphi(x)$可以是无限维，若$\varphi(x)$是无限维的情况下，$\omega^T$也是无限维的，则变得不可操作。</p>
<h1 id="核函数"><a href="#核函数" class="headerlink" title="核函数"></a>核函数</h1><p>我们可以不知道无限维映射$\varphi(x)$的显式表达，我们只要知道一个核函数(Kernel Function)</p>
<script type="math/tex; mode=display">
{\color{RoyalBlue}K(x_1,x_2)=\varphi(x_1)^T\varphi(x_2)}</script><p>(K是一个数，等号右侧是$\varphi(x_1)$和$\varphi(x_2)$两个无限向量的内积)</p>
<blockquote>
<p>对于任何两个向量$x_1 x_2$都能算出K，不需要找出$\varphi$的具体形式，此优化问题一样可解</p>
</blockquote>
<p>则$y_i[\omega^T\varphi(x_i)+b]\ge1(i=1\sim n)$这个优化式仍可解。</p>
<h2 id="高斯核函数"><a href="#高斯核函数" class="headerlink" title="高斯核函数"></a><a href="https://baike.baidu.com/item/%E9%AB%98%E6%96%AF%E6%A0%B8%E5%87%BD%E6%95%B0/6661425?fr=aladdin" target="_blank" rel="noopener">高斯核函数</a></h2><script type="math/tex; mode=display">
{\Large K(x_1,x_2)=e^{-\frac{\left \|  x_1-x_2 \right \|^2}{2\sigma^2}}=\varphi(x_1)^T\varphi(x_2)}</script><blockquote>
<p>上式的$\varphi(x)$是无限维度的</p>
</blockquote>
<h2 id="多项式核函数"><a href="#多项式核函数" class="headerlink" title="多项式核函数"></a>多项式核函数</h2><script type="math/tex; mode=display">
K(x_1,x_2)=(x_1^Tx_2+1)^d=\varphi(x_1)^T\varphi(x_2)</script><blockquote>
<p>$d$是多项式阶数 上式的$\varphi(x)$是有限维度的</p>
</blockquote>
<h2 id="Mercer’s-Theorem"><a href="#Mercer’s-Theorem" class="headerlink" title="Mercer’s Theorem"></a>Mercer’s Theorem</h2><blockquote>
<script type="math/tex; mode=display">
泛函分析中的Mercer 定理：任何半正定的函数都可以作为核函数。\\所谓半正定的函数f(x_i,x_j)，是指拥有训练数据集合(x_1,x_2,...x_n) ，\\我们定义一个矩阵的元素 a_{ij} = f(x_i,x_j) ，这个矩阵式n*n的，如果这个矩阵是半正定的，\\那么f(x_i,x_j)就称为半正定的函数。这个Mercer定理是核函数必要条件.</script></blockquote>
<p>$K(x_1,x_2)$能写成$\varphi(x_1)^T\varphi(x_2)$的充要条件：</p>
<ul>
<li><script type="math/tex; mode=display">K(x_1,x_2)=K(x_2,x_1)（交换性）</script></li>
<li><script type="math/tex; mode=display">\forall C_i,x_i (i \sim N)有：\sum_{i=1}^{N}\sum_{j=1}^{N} C_i C_j K(x_i,x_j)\ge0 （半正定性）</script></li>
</ul>
<h1 id="原问题和对偶问题"><a href="#原问题和对偶问题" class="headerlink" title="原问题和对偶问题"></a>原问题和对偶问题</h1><p>优化理论推荐书籍：</p>
<ol>
<li><p><a href="https://web.stanford.edu/~boyd/cvxbook/" target="_blank" rel="noopener">《Convex optimization》</a>Stephen Boyd &amp; Lieven Vandenberghe.&ensp; <a href="https://web.stanford.edu/~boyd/cvxbook/bv_cvxbook.pdf" target="_blank" rel="noopener">Convex optimization.pdf</a> </p>
</li>
<li><p><a href="https://labs.xjtudlc.com/labs/wldmt1/books/Optimization/Nonlinear%20programming%20Theory%20and%20Algorithms.pdf" target="_blank" rel="noopener">《Nonlinear Programming》</a></p>
</li>
</ol>
<h2 id="原问题-Prime-Problem"><a href="#原问题-Prime-Problem" class="headerlink" title="原问题 Prime Problem"></a>原问题 Prime Problem</h2><p><code>原问题非常普适</code></p>
<p>最小化：<br>$f(\omega)$</p>
<p>限制条件：$g_i(\omega)\le0(i=1 \sim K)$</p>
<p>&emsp;&emsp;&emsp;$h_i(\omega)=0(i=1 \sim M)$</p>
]]></content>
      <tags>
        <tag>Machine-Learning</tag>
      </tags>
  </entry>
  <entry>
    <title>支持向量机（线性模型）</title>
    <url>/2020/08/26/%E6%94%AF%E6%8C%81%E5%90%91%E9%87%8F%E6%9C%BA%EF%BC%88%E7%BA%BF%E6%80%A7%E6%A8%A1%E5%9E%8B%EF%BC%89/</url>
    <content><![CDATA[<p>浙江大学 机器学习课程笔记归纳</p>
<a id="more"></a>
<h1 id="01-教科书介绍"><a href="#01-教科书介绍" class="headerlink" title="01 教科书介绍"></a>01 教科书介绍</h1><p>（1）机器学习，周志华，清华大学出版社，2016 （知识点全面，编程方面薄弱）</p>
<p>（2）统计学习方法，李航，清华大学出版社，2012（数学推导丰富清楚）</p>
<p>（3）Machine Learning in Action, P.Harrington,人民邮电出版社</p>
<p>（4）Pattern Recognition and Machine Learning （模式识别与机器学习），Christopher M. Bishop, 2006</p>
<p>（5） Machine Learning: A Probabilistic Perspective, K. P. Murphy,  （概率论角度讲述机器学习）</p>
<p>（6）Machine Learning （机器学习）, Tom M. Mitchell, 机械工业出版社，2003年，（机器学习领域最早的一本教科书）</p>
<p>（7）Deep Learning, I. Goodfellow, Y. Bengio and A. Courville, 2016.（网络上公开可以下载）</p>
<p>（8）<a href="https://www.coursera.org/course/ml" target="_blank" rel="noopener">Stanfrod Web course by Andrew Ng</a></p>
<p>（9）<a href="https://cs231n.Stanford.edu" target="_blank" rel="noopener">Stanfrod Web course by Fei-fei Li</a></p>
<hr>
<h1 id="02-没有免费午餐定理-No-Free-Lunch-Theorem"><a href="#02-没有免费午餐定理-No-Free-Lunch-Theorem" class="headerlink" title="02 没有免费午餐定理(No Free Lunch Theorem)"></a>02 没有免费午餐定理(No Free Lunch Theorem)</h1><p>“没有免费午餐定理”（No Free Lunch Theorem）: 任何一个预测函数，如果在一些训练样本上表现好，那么必然在另一些训练样本上表现不好，表现好与表现不好的情况一样多。</p>
<p><strong>如果我们不对特征空间有先验假设，则所有算法的平均表现是一样的</strong></p>
<p><strong>我们认为：特征差距小的样本更有可能是同一类</strong></p>
<h1 id="03-概念介绍"><a href="#03-概念介绍" class="headerlink" title="03 概念介绍"></a>03 概念介绍</h1><h2 id="Three-categories-of-machine-learning-algorithms"><a href="#Three-categories-of-machine-learning-algorithms" class="headerlink" title="Three categories of machine learning algorithms:"></a>Three categories of machine learning algorithms:</h2><ul>
<li>Supervised learning - SVM , NEURAL NETWORKS</li>
<li>Unsupervised learning - CLUSTERING , EMALGORITHM PCA</li>
<li>Semi-Supervised Learning （前三类基于是否标签分类，均有目标，对于测试数据，我们的算法要预测测试数据的标签）</li>
<li>Reinforcemenet Learning (基于是否有目标 (eg.自动驾驶 计算机下棋) 关注点在最后的结果)</li>
</ul>
<p>Supervised learning : The machine learning task of inferring a function from labeled training data.</p>
<p>Supervised learning can be further divided into <strong>classification</strong> and <strong>regression</strong></p>
<blockquote>
<p>classification(分类) 表示离散的值</p>
<p>regression(回归) 表示所有的标签是连续的值</p>
</blockquote>
<p>Task 1 : Face Verification</p>
<p>目前来说，在人脸识别任务中，是一个classification问题，标签是离散的。</p>
<p>Task : Face Age Estimation &amp; Gender Identification</p>
<p>预测年龄是一个regression问题</p>
<p>分类和回归没有明确的界限 两个问题的算法基本通用</p>
<h1 id="04-支持向量机（线性模型）问题-Support-Vector-Machine"><a href="#04-支持向量机（线性模型）问题-Support-Vector-Machine" class="headerlink" title="04 支持向量机（线性模型）问题 (Support Vector Machine)"></a>04 支持向量机（线性模型）问题 (Support Vector Machine)</h1><p>对于样本数较小的问题 用支持向量机都会得到比较好的结果</p>
<p>该方法由苏联人Vapnik发明</p>
<h2 id="线性模型"><a href="#线性模型" class="headerlink" title="线性模型"></a>线性模型</h2><p>一条直线可分开样本集class1 &amp; class2 叫线性可分训练样本集(Linear Separable)，相对的有：非线性可分(Non-linear Separable)</p>
<blockquote>
<p><a href="https://imgchr.com/i/dWqW24" target="_blank" rel="noopener"><img src="https://s1.ax1x.com/2020/08/26/dWqW24.th.png" alt="dWqW24.th.png"></a></p>
<p>假定特征的测量是有误差的，2号线对于误差的容忍程度多一点</p>
</blockquote>
<h2 id="2号线如何取"><a href="#2号线如何取" class="headerlink" title="2号线如何取"></a>2号线如何取</h2><p>首先定义一个衡量每一条线的一个标准（性能指标）</p>
<ol>
<li>对于每一条线都能算出一个性能指标</li>
<li>2号线对于此性能指标能算到最大</li>
</ol>
<p>对于任何一条可分开样本集的线，向一侧平行地移动，直到插到样本集class1的某一个或某几个样本；再向另一侧平移，直到插到样本集class2的某一个或某几个样本。</p>
<blockquote>
<p><a href="https://imgchr.com/i/dWxwxU" target="_blank" rel="noopener"><img src="https://s1.ax1x.com/2020/08/26/dWxwxU.th.png" alt="dWxwxU.th.png"></a></p>
<p>$d$:间隔(Margin)</p>
<p><em>最大化间隔则能得到2号线</em></p>
<p>将平行线插到的向量叫支持向量(support vector)</p>
<p>画出这条线，只跟支持向量有关，所以适合用在小样本的问题上。</p>
</blockquote>
<p><strong>定义：</strong><br>1、训练数据和标签<br>$(x_1,y_1) (x_2,y_2)……(x_N,y_N)$<br>，所有的$x$都是一个向量，$y$是标签，$y_i=+1或-1$</p>
<blockquote>
<p>要找一条直线 二维时是一条直线 三维时是一个平面 四维或大于四维时都是超平面</p>
</blockquote>
<p>2、线性模型：超平面参数：$(\omega,b)$ 超平面(Hyperplane)线性方程表达式：$\omega^{T}x+b=0$</p>
<blockquote>
<p>$x_1$是向量 $y$是标签 </p>
<p>$\omega$是向量 $b$是常数 </p>
<p>$\omega$转置后与$x_1$相乘得常数  </p>
<p>$\omega$也是一个向量 它的维度和$x$的维度是一样的</p>
<script type="math/tex; mode=display">
x_{1}=
\begin{pmatrix}  
 x_{11}  \\  
 \vdots  \\  
 x_{1m}  \\
\end{pmatrix}</script><script type="math/tex; mode=display">
\omega_{1}=
\begin{pmatrix}  
 \omega_{11}  \\  
 \vdots       \\  
 \omega_{1m}  \\
\end{pmatrix}</script><p>机器学习过程：通过训练数据在模型的限定下把$\omega$和$b$求出来</p>
</blockquote>
<h2 id="线性可分数学定义"><a href="#线性可分数学定义" class="headerlink" title="线性可分数学定义"></a>线性可分数学定义</h2><p>一个训练集线性可分是指</p>
<script type="math/tex; mode=display">
\left \{ \left ( x_{i},y_{i} \right )  \right \} _{i=1\sim N} \\

\exists \left ( \omega ,b \right )  ，使：对 \forall i=1\sim N 
有：\\

1. 若 y_i=+1 , 则 
\omega^{T}x_{i}+b\ge 0 \\

2. 若 y_i=-1 , 则
\omega^{T}x_{i}+b<0</script><blockquote>
<p>写成<br>$\omega^{T}x_{i}+b\le 0$</p>
<p>$\omega^{T}x_{i}+b&gt;0$<br>也是完全一样的<br>$<br>\left ( \omega ,b \right ) = -\left ( \omega’ ,b’ \right )<br>$</p>
</blockquote>
<p>上述1.和2.在$y_{i}$取+1和-1的情况下可以简化合并为：</p>
<script type="math/tex; mode=display">
y_{i}[\omega^{T}x_{i}+b]\ge0 (公式1)</script><h2 id="支持向量机的优化问题："><a href="#支持向量机的优化问题：" class="headerlink" title="支持向量机的优化问题："></a>支持向量机的优化问题：</h2><p>  这里的优化问题是一个<a href="https://zhuanlan.zhihu.com/p/85408804" target="_blank" rel="noopener">凸优化</a>问题，其中的二次规划问题。</p>
<pre><code>二次规划问题(Quadratic Programming)：

 1. 目标函数(Objective Function)是二次项

 2. 限制条件是一次项

结果要么无解，要么只有一个极值
</code></pre><p>最小化(Minimize):</p>
<script type="math/tex; mode=display">\left \| \omega \right \|^2</script><blockquote>
<p>最小化(Minimize)也可写成</p>
<script type="math/tex; mode=display">
\frac{1}{2}\left \| \omega \right \|^2</script><p>好处是求导方便</p>
</blockquote>
<p>限制条件(Subject to):</p>
<script type="math/tex; mode=display">y_i[\omega^Tx_{i}+b]\ge1  (i=1\sim n)</script><blockquote>
<p>限制条件(Subject to)$\ge$右侧的1可以改为任意整数，求出的结果都是同一个平面，它们的差距只有一个常数$a$</p>
<p>如果数据集线性不可分，所有的$\omega$和$b$都不可能满足限制条件(Subject to)</p>
</blockquote>
<p>事实1：$\omega^Tx+b=0$ 与 $a\omega^Tx+ab=0$是同一个平面。$a\in R^+$</p>
<p>若$(\omega,b)$满足公式1，则$(a\omega,ab)$也满足公式1 (前提是$a$是一个正数，是负数的话公式久就倒了)</p>
<p>事实2：点到平面距离公式，<br>平面：$\omega_1x+\omega_2y+b=0$，<br>则$(x_0,y_0)$到此平面的距离：</p>
<script type="math/tex; mode=display">
d=\frac{\left|\omega_1 x_0+\omega_2 y_0+b\right|}{\sqrt{\omega_1^2+\omega_2^2}}</script><p>向量$x_0$到超平面$\omega^Tx+b=0$的距离：</p>
<script type="math/tex; mode=display">
d=\frac{\left| \omega^Tx_0+b \right|}{\left \| \omega \right \|} 其中 \left \| \omega \right \| = \sqrt{\omega_1^2+\omega_2^2+ \cdots +\omega_m^2}</script><blockquote>
<script type="math/tex; mode=display">
\left \| \omega \right \| = \sqrt{\omega_1^2+\omega_2^2+ \cdots +\omega_m^2}</script><p>也叫作<a href="https://baike.baidu.com/item/%E8%8C%83%E6%95%B0/10856788?fr=aladdin" target="_blank" rel="noopener">2-范数</a>，就是通常意义下的距离。</p>
<p>我们可以用$a$去缩放</p>
<script type="math/tex; mode=display">(\omega,b)-->(a\omega,ab)</script><p>最终使在支持向量上有：</p>
<script type="math/tex; mode=display">
\left|\omega^Tx_0+b\right |=1</script><p>此时支持向量与平面距离</p>
<script type="math/tex; mode=display">
d=\frac{1}{\left\| \omega \right\|}</script></blockquote>
<hr>
<blockquote>
<p>支持向量机的理论推导 :  <a href="https://kdocs.cn/l/chTOq7Uj9qL1[金山文档" target="_blank" rel="noopener">https://kdocs.cn/l/chTOq7Uj9qL1[金山文档</a>] 1. 支持向量机的理论推导.pdf</p>
</blockquote>
]]></content>
      <tags>
        <tag>Machine-Learning</tag>
      </tags>
  </entry>
  <entry>
    <title>研究方法归纳</title>
    <url>/2020/08/05/%E7%A0%94%E7%A9%B6%E6%96%B9%E6%B3%95%E5%BD%92%E7%BA%B3/</url>
    <content><![CDATA[<p>蒙特卡罗方法<br><a id="more"></a></p>
<h1 id="蒙特卡洛方法"><a href="#蒙特卡洛方法" class="headerlink" title="蒙特卡洛方法"></a>蒙特卡洛方法</h1><h2 id="提出"><a href="#提出" class="headerlink" title="提出"></a>提出</h2><p>蒙特卡罗方法于20世纪40年代美国在第二次世界大战中研制原子弹的“曼哈顿计划”计划的成员S.M.乌拉姆和J.冯·诺伊曼首先提出。数学家冯·诺伊曼用驰名世界的赌城—摩纳哥的Monte Carlo—来命名这种方法，为它蒙上了一层神秘色彩。在这之前，蒙特卡罗方法就已经存在。1777年，法国数学家布丰（Georges Louis Leclere de Buffon，1707—1788）提出用投针实验的方法求圆周率π。这被认为是蒙特卡罗方法的起源。</p>
<h2 id="基本思想"><a href="#基本思想" class="headerlink" title="基本思想"></a>基本思想</h2><p>当所求解问题是某种随机事件出现的概率，或者是某个随机变量的期望值时，通过某种“实验”的方法，以这种事件出现的频率估计这一随机事件的概率，或者得到这个随机变量的某些数字特征，并将其作为问题的解。</p>
<h2 id="主要步骤"><a href="#主要步骤" class="headerlink" title="主要步骤"></a>主要步骤</h2><p>蒙特卡罗方法的解题过程可以归结为三个主要步骤：构造或描述概率过程；实现从已知概率分布抽样；建立各种估计量。</p>
<ul>
<li>构造或描述概率过程</li>
</ul>
<p>对于本身就具有随机性质的问题，如粒子输运问题，主要是正确描述和模拟这个概率过 程，对于本来不是随机性质的确定性问题，比如计算定积分，就必须事先构造一个人为的概率过程，它的某些参量正好是所要求问题的解。即要将不具有随机性质的问题转化为随机性质的问题。</p>
<ul>
<li>实现从已知概率分布抽样</li>
</ul>
<p>构造了概率模型以后，由于各种概率模型都可以看作是由各种各样的概率分布构成的，因此产生已知概率分布的随机变量（或随机向量），就成为实现蒙特卡罗方法模拟实验的基本手段，这也是蒙特卡罗方法被称为随机抽样的原因。最简单、最基本、最重要的一个概率分布是（0，1）上的均匀分布（或称矩形分布）。随机数就是具有这种均匀分布的随机变量。随机数序列就是具有这种分布的总体的一个简单子样，也就是一个具有这种分布的相互独立的随机变数序列。产生随机数的问题，就是从这个分布的抽样问题。</p>
<p>在计算机上，可以用物理方法产生随机数，但价格昂贵，不能重复，使用不便。另一种方法是用数学递推公式产生。这样产生的序列，与真正的随机数序列不同，所以称为伪随机数，或伪随机数序列。不过，经过多种统计检验表明，它与真正的随机数，或随机数序列具有相近的性质，因此可把它作为真正的随机数来使用。由已知分布随机抽样有各种方法，与从(0,1)上均匀分布抽样不同，这些方法都是借助于随机序列来实现的，也就是说，都是以产生随机数为前提的。由此可见，随机数是我们实现蒙特卡罗模拟的基本工具。</p>
<ul>
<li>建立各种估计量</li>
</ul>
<p>一般说来，构造了概率模型并能从中抽样后，即实现模拟实验后，我们就要确定一个随机变量，作为所要求的问题的解，我们称它为无偏估计。建立各种估计量，相当于对模拟实验的结果进行考察和登记，从中得到问题的解。</p>
<h2 id="数学应用"><a href="#数学应用" class="headerlink" title="数学应用"></a>数学应用</h2><p>通常蒙特·卡罗方法通过构造符合一定规则的随机数来解决数学上的各种问题。对于那些由于计算过于复杂而难以得到解析解或者根本没有解析解的问题，蒙特·卡罗方法是一种有效的求出数值解的方法。一般蒙特·卡罗方法在数学中最常见的应用就是蒙特·卡罗积分。</p>
<h2 id="工作过程"><a href="#工作过程" class="headerlink" title="工作过程"></a>工作过程</h2><p>在解决实际问题的时候应用蒙特·卡罗方法主要有两部分工作：</p>
<ul>
<li>用蒙特·卡罗方法模拟某一过程时，需要产生某一概率分布的随机变量。</li>
<li>用统计方法把模型的数字特征估计出来，从而得到实际问题的数值解。</li>
</ul>
<h2 id="分子模拟计算"><a href="#分子模拟计算" class="headerlink" title="分子模拟计算"></a>分子模拟计算</h2><p>使用蒙特·卡罗方法进行分子模拟计算是按照以下步骤进行的： </p>
<ul>
<li>使用随机数发生器产生一个随机的分子构型。</li>
<li>对此分子构型的其中粒子坐标做无规则的改变，产生一个新的分子构型。</li>
<li>计算新的分子构型的能量。</li>
<li><p>比较新的分子构型于改变前的分子构型的能量变化，判断是否接受该构型。</p>
<blockquote>
<p>若新的分子构型能量低于原分子构型的能量，则接受新的构型，使用这个构型重复再做下一次迭代。 若新的分子构型能量高于原分子构型的能量，则计算玻尔兹曼因子，并产生一个随机数。若这个随机数大于所计算出的玻尔兹曼因子，则放弃这个构型，重新计算。 若这个随机数小于所计算出的玻尔兹曼因子，则接受这个构型，使用这个构型重复再做下一次迭代。</p>
</blockquote>
</li>
<li><p>如此进行迭代计算，直至最后搜索出低于所给能量条件的分子构型结束。</p>
</li>
</ul>
<h2 id="项目管理"><a href="#项目管理" class="headerlink" title="项目管理"></a>项目管理</h2><p>项目管理中蒙特·卡罗模拟方法的一般步骤是：</p>
<ul>
<li>对每一项活动，输入最小、最大和最可能估计数据，并为其选择一种合适的先验分布模型；</li>
<li>计算机根据上述输入，利用给定的某种规则，快速实施充分大量的随机抽样</li>
<li>对随机抽样的数据进行必要的数学计算，求出结果</li>
<li>对求出的结果进行统计学处理，求出最小值、最大值以及数学期望值和单位标准偏差</li>
<li>根据求出的统计学处理数据，让计算机自动生成概率分布曲线和累积概率曲线(通常是基于正态分布的概率累积S曲线)</li>
<li>依据累积概率曲线进行项目风险分析。</li>
</ul>
<h2 id="力学应用"><a href="#力学应用" class="headerlink" title="力学应用"></a>力学应用</h2><p>在力学中，蒙特卡罗方法多被用来求解稀薄气体动力学问题，其中最为成功的是澳大利亚G.A.伯德等人发展的直接模拟统计试验法。</p>
<p>此法通过在计算机上追踪几千个或更多的模拟分子的运动、碰撞及其与壁面的相互作用，以模拟真实气体的流动。它的基本假设与玻耳兹曼方程一致，但它是通过追踪有限个分子的空间位置和速度来代替计算真实气体中分布函数。模拟的相似条件是流动的克努曾数（Kn）相等，即数密度与碰撞截面之积保持常数。对每个分子分配以记录其位置和速度的单元。在模拟过程中分别考虑分子的运动和碰撞，在此平均碰撞时间间隔内，分别计算分子无碰撞的运动和典型碰撞。若空间网格取得足够小，其中任意两个分子都可以互相碰撞。</p>
<p>具体决定哪两个刚体分子相撞，是随机取一对分子，计算它们的相对速度，根据此值与最大相对速度的比值和随机取样比较的结果，来决定该对分子是否入选。碰撞后分子的速度根据特定分子模型的碰撞力学和随机取样决定。分子与壁面碰撞后的速度，则根据特定的反射模型和随机取样决定。</p>
<p>对于运动分子的位置和速度的追踪和求矩可以得出气体的密度、温度、速度等一些感兴趣的宏观参量。而对于分子与壁面间的动量和能量交换的记录则给出阻力、举力和热交换系数等的数学期望值。</p>
]]></content>
      <tags>
        <tag>Science</tag>
      </tags>
  </entry>
  <entry>
    <title>交通流理论笔记</title>
    <url>/2020/07/02/%E4%BA%A4%E9%80%9A%E6%B5%81%E7%90%86%E8%AE%BA%E7%AC%94%E8%AE%B0/</url>
    <content><![CDATA[<div id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">
  <div class="hbe-input-container">
  <input type="password" id="hbePass" placeholder="" />
    <label for="hbePass">You can contact me for a password</label>
    <div class="bottom-line"></div>
  </div>
  <script id="hbeData" type="hbeData" data-hmacdigest="dc741459befbd5e99d4fb91569158fad4cd1993f731790f1f27fdec715582458"></script>
</div>
<script src="/lib/blog-encrypt.js"></script><link href="/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
      <tags>
        <tag>Science</tag>
      </tags>
  </entry>
  <entry>
    <title>交通流理论笔记Lecture2</title>
    <url>/2020/06/30/%E4%BA%A4%E9%80%9A%E6%B5%81%E7%90%86%E8%AE%BA%E7%AC%94%E8%AE%B0Lecture2/</url>
    <content><![CDATA[<div id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">
  <div class="hbe-input-container">
  <input type="password" id="hbePass" placeholder="" />
    <label for="hbePass">You can contact me for a password</label>
    <div class="bottom-line"></div>
  </div>
  <script id="hbeData" type="hbeData" data-hmacdigest="e35bc82c0a3f58ae83ea9ad21422294af28dc1825e390af8c7520336c6528f7c">3e083b4887c2f0d4d45fff13f7a36f0bf9edc8cc90e881c86b21c5c52986ba3102e7d985b95adee4c192309453cf9ef278c0dea61987799682fcd2d313bd0bbeffdca084ecb2f9f792d6291a04333ece982eee10602419ea66f1eb98cb3b6975c2250509d74d3808fc92a4402b7039b2390d03bae4dd394070821f7315889d07b660c579fb24506686fb5ef2bf7eeae6</script>
</div>
<script src="/lib/blog-encrypt.js"></script><link href="/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
      <tags>
        <tag>Science</tag>
      </tags>
  </entry>
  <entry>
    <title>微分方程数值方法讲座</title>
    <url>/2020/06/24/%E5%BE%AE%E5%88%86%E6%96%B9%E7%A8%8B%E6%95%B0%E5%80%BC%E6%96%B9%E6%B3%95%E8%AE%B2%E5%BA%A7%E7%AC%94%E8%AE%B0/</url>
    <content><![CDATA[<div id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">
  <div class="hbe-input-container">
  <input type="password" id="hbePass" placeholder="" />
    <label for="hbePass">You can contact me for a password</label>
    <div class="bottom-line"></div>
  </div>
  <script id="hbeData" type="hbeData" data-hmacdigest="52c96c2a64998c353628d8214957da6258bd6f75e9a716ef66ec062bd6de22fe">03356be1501e653ebcfaa2a06aa65fe8663bc6d8d4ac37b72fcf2bdfea3e15a4cd90f65bbfb3ea37b1c28fe1b7a224e740d5d01df9f3ea597e268d5f0abdcdafa6ab3554ef6104400f37d0d8c7745973049af02f09ccf3fc655a5ac0d23a0ebed9e82fcf97150b2bcb50db0f78564abbc3adfba900babdc1238df9d1ed62ae9da33d41e861b93d19ed31aad7bd3e60cfde05e675a80105d9ec27341b461015bd0cb82ea22830b4d8e2487aa9cd64fdfe43f893f88e677bbfd794b3b254492e4a17fdfdb0e4ff316a97f4f0059590fb1e089f5ea53a3cfbc4994d3e4ab763f7ad3a7f814454841aa242a1a6b07e5bb6a04795b432d7ed4ddc061b3bdd895806b07129ee9f5e10e817474cb5a3abdcece48ae57f97602a56a082506b8d89102c3134b4cd74c3dde237f43195ad002d1bd371e7ecd91e6a51e5b34f403c5eb881e7c726aca5580dd00af7d4a9b1b09dc83cab26bef5450548bba391ce60136de6587dc338ceb2745fa80610b8454f34a2c835bdf0161abda37f71f54f28e2b07bc66c0ec9ab3a6cafa669fdd6cdbaa6713aadd970df98788b2d5f2a3069052549027f4ad95cc161c0a02b927d518996eef5f750e57e98aee179eaacdd8784870e74b0bb6afea2810cf4e6485e2ce56d55b72092d2a795c8af3289f399986b50388bdc8974e81d90505cfc2648c9a05e09515c28e615c660976cf557293bb8669f66cf592c4bdb12e04924efd60e82c9192549722dca90f3e086cdcc527de1d820ee1f1fc36830a37ad5756b2c4a081b3fa2d6ef03f432f4463036b0adf66bd1cb9996f9a9982760b923af5fbc009ec9b48560a74c7dda77d877233ad8a3b8e7995ec52b3d42628611ee69326f8db6a06aaac623a4b6299b66c31915798d08ef38c937187aa84821feaf594132ddc0c16f71d9c6c24235ada281b56a66752ab6b4a181f85a07455b0ccdcfcfe3284a37a140ce3a4b66fb9be3ef0fcd841960ad17efeead13c1ed57451221f717d3fc7e2fd899c856fc1477a640cbd89c54ab6e1b372da949369c8c3027169aa43f8b2a4d3d68bcbb36dac6c109166b7b43c5b651b0232165dc879d3bffd156808b2b0141d5a276defcfce10e51a0dc2015985a1de05990203c4b25cdcfb141482638df5ac2261b583c24eb1d81d519fdd57a2f58d8f0c82cbfb911af9ee5bfc90b2aa41163c93824b5c6357fb4e4da4efe696a98cd1cad0c7df14a1e9a034afb0410c195d8202100535af4ff830b48560167be4368178dcba99255db925dcd38b7bb325b780d82f2dc9c47f5e70b09a677425b989accb5ba914934ad2effd93d750c11aa79a00a1925695a7e1d7c2511b20889741520b742d9f3f5237f50a8fd9930690f63681432f2d32eaa814b97b9879378e1c2ee9475529623e84d9af6fd6820831e39ceb8527e0c2c25c4b304d2c4b0489bc030c2354399788ba5079fee10f27e968cc7258214d60281ac150b2f51d5099b9a8af5dc575b3de5560ae3811fc221386e57ee6cbd9a84c01b9b8343e7b3e67924ed5a0ac8b3b789a45127bcd3bb513d0cc5743d3333d2a79b97629bcacde55e1eb7be84c7b1f360aa69f5523b92231f921fc06de97c1d73014e4941b12667f9a47d4de6e16c3eb65c53b006425b63b8388b519a670683a076b215891c1eaf03db59889dce550a5e3ea7baeabb2d9fe2355a7ca69bf48a2ff734ea0b69ffa3d533a22b68541b9d437d6d5f94390f8f4134512899079fcaddaaa1d44e217a478d7155a07023bbce41d9075c429b338147eb17174f77f0dcdfdc9d22f819c8e02a4be45259af981e8863522711846e4f12f4869a93539b1e65182592b5f887c8075e27aeb2478270b980d7f5f7cd9570d350a400b2ae6ec0d54b862fc5bf1fa43210a8cfc90770881c5f962020975825e8ad2c065118139f8f1e647e6705dc042ad8014d86fdf3a132a3345d89b3ca411af14b0e0d74281ab175eb1a6070b05af10cbf1c339de277f2f43931198e1f92480bb1a65be31955e18844f3403488c64fd744dbe58eed9fff9f3fba8d8ffcbe08c4432ea25c010500d55cca068029312455377d48345aef05c883744595168fd8742f8ad00557211ddf714f2aeb63ba55ae459bc28c8a38f05f287f596c3c02db1d2e040d93c103ff8ab6a123c378e0721849d12657a7961ee86fd6d46b466bd12fbc7cff7589b7b975135021d66fd45a5325c6c22e11cc69183b5fb4a4bc0785079e3668fc79d1c0f3eef76a207bd2d57e0eeba9d8255e8d55cad7c8f3805df2c44580a1686904a51cf668bbee3f96f93d9d2ad5f0e3dae6bfcc1ec1c7bdd4c4183b963d68202eaf28211944342a2643e6ca3d86c78ff6dac4c3b48159b2566f673c29fd95b610de001cb667d2d92485a64b7e182b2e463589094f98160e653a0e06366bfcc756a3229dfcf46cc56c798e0514b6a002e6c8a0c189de7a03b619d98797049f3c0bd45bbbf0f88a8ecc04a6697feda74e97d038b9884577ee8d1b5f9069570cac06d55abd984e9bbe23cdc347196e04b4cb1636df3475d15d221bd47bd6f61894f7a14d00cbb6e178e615e4536841a2cdce72ebaedefd2bc0a4984fe73282cd3c0c99c7ab7e6d2bda0e313d46c6838f9538bd4073a4bbb92ee3ffb950e2d2c99b137c8de21c899339c2f54836710f920fbb10bec6afe8ecfc07a32d44ead3aff9646f49f086ef4bd60738a273c0c0c96a78a75650e8f86ec766933a7ee547f0754e7f378b991edd695fc376cb99eb0d8fbc05c1c042c0d1c35b0c55944d27054b3edd71f35ed44d7480627964fc5dd4261b1b1721d618ddd0ce09f8b71be461ac75e7156a7fa4176c463e0c4ea5e6d5e0128fbd3abf2e0a47c3bbd9a8ad8f66d97e8abf6841cce60861b9ddfee627b30f8a46edef74c194848bf3ea5b210c832b4c168d2a76e9dc282e2d5074de576a40b9025aeff7c889a4f5b1a16725102670b82380f2e1666e32c3e5dce658692eeb326f6233e6d241004d6ae9ef2b32d1e22b5b1c4077d784e1876792b98ccb1d58f02d7a77438f0d46203e831a33d917f5e49151c1e8b9c4e11c9fb3ca8a012700e5c99a7067c637e3970097a59eaaa1f7bf17de7a8e34577f4dcd06784a543dd98a0f6069169dde7985be9ec6462f7783e996ef073129081c9baf2160f648b1e9c3c162cb38a39d15873ae2b557c8914a5d59584ca85b520ca6c2a36012adc2b6f6c2c414d9829844490159dbdab0014fa6e9098057c361c566452bcbfcfe4b1344a4f7e6be6e98a79b9e6512519d22dfe32f6702aebbf6857b0b33f9f85373e6a0f34324d8a64bf7d5673a35d79f1e532f71c4f6d47f60a46bc8341c56dcd97209546c3d519592a23b7317f5438ea790b4d5dd176a976ca999ef1b9694d461f5fbffeb4afd25d1e07e565ddbfd6f5d4e8c5a6e32a72ae1f030c2c65cecc1eeb505cdce52d13bf29780c04c5fed0de1c0971a4ab081af415c3fe6605797198f5b29807928fcbac2ae1e42b4985ee8fa104ff2096162b0ef23f1ac64620ef56993bb222f5eacb562c1d1a9fb8d6bc028a8da3dca1298f491e22174d03c2668f613fda9152b3a091d9ebc1bdceac8b014ee73ae3dfdee1f1dfe72cce9ce7002b087f519f6482627637e0daec5467ad2e251ef71e487039b60b293e309c1250648237d0f4d85e6b558796042e88bc379d93fec3451c5fbcc36b4c0fd23c521599843bd6ba2f00500cf82f12c471dc060da44059bc521c1731ea7993416d3059d8d04729a4513e8824926ece5f62cec84e94987f39fe9ddb45906537d9576d4fcc776d5744b5d9482a23c1ff885051a502ba7571950933a2de61d0d2c577c56fe1bb746a0a7c9f135453782940a7a4aa326523d07bda638af0536e08240be274ddef592f4f3618990cb51bc1e8258597a53da60ca0bce53b2f31311a2ce0a46ec18ce118a92f8044bdad0ab2d2bac38ce91ac97eba01976640015e5d1140323c2e9e8879c86207f8565c55e882759c86a6bee7bd28f0513bc0698e07c5cb4694b272c69fe4639d0c9618ff1a8ae0761d752eaccbc156e08104a29635c7b5c8b8e17ff14840a135cbbf3f9b2ad934a152f909459cdaea5635606003c9f6cec9d5be3d78ca420ca5f4a6297aec55aafc06d01ccc9c060b5da0635c3e6a242ed1f7b5e462222543ed167a26258db925530bf67bca7f70b5bc02887e3291ff4c846c51ef040458a1ea6b1b7f595f145e6a241d0e0695bfd34b3ff35cecad9fe10e70b38c0201d26d95034a9e334bc32fdb8aad8d1b9598d001597695797f39cb253e2fa62d07e1765c52ca2b45a30d3d71e45dfce07050d9877e70e2599252d1b92dcba206f260535fac1b9f80a71655cbdad1c9bc5ac3d7713e566c036c799e369a21b5174e8611d56809768a50b24de413c960f533d83ee6efc7c6a8e68c85ad33297a44465d6e8f89c8813736f0f30d4a371870dbf4bb58c1fb7502e089971e992b12d15aac78f2eed49c6361aa5da3f845eb77e557160ed612a89fb34a8568d783c4508720a0e2a5e5acbdbd892ce00a61ac875b96e65962a940e6f6a39da7cf09b3c6b5167c7f02a56641194cc7a9a4e2b0370195a6e4da9cf8a6e5ba4d9ed16c308deff2d7104d0b591300765dcfad09cd5128e2ece9bf6aadfd2a0be05c2e4910654ba049688cd7373c3d1df091a38b36465105d8f02db95de4f0a00817462a5370bd692464acd006088be574b272de2fa5759cfb26325a73f7595687a65b96780d2e55bd6f3d813ca9a3ead928699dd6c4fe289f45bc6f7e914bc79cc26afb4d3b93779e121d61a16b4e0cc1de0055d60804126aba4b18b66e27d6ea2d619dc2c0c441b8ce99049dc2d67fb34457d725be2b81db5d67c8d540610ce</script>
</div>
<script src="/lib/blog-encrypt.js"></script><link href="/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
      <tags>
        <tag>Science</tag>
      </tags>
  </entry>
  <entry>
    <title>MarkDown语法总结</title>
    <url>/2020/06/14/MarkDown%E8%AF%AD%E6%B3%95%E6%80%BB%E7%BB%93/</url>
    <content><![CDATA[<p>markdown语法备忘录<br><a id="more"></a></p>
<h1 id="区块元素"><a href="#区块元素" class="headerlink" title="区块元素"></a>区块元素</h1><h2 id="区块引用"><a href="#区块引用" class="headerlink" title="区块引用"></a>区块引用</h2><p>如果你要引用某一区块，你可以在每一行的行首插入一个 &gt;  例如：</p>
<blockquote>
<p>This is a blockquote with two paragraphs. Lorem ipsum dolor sit amet,<br>consectetuer adipiscing elit. Aliquam hendrerit mi posuere lectus.<br>Vestibulum enim wisi, viverra nec, fringilla in, laoreet vitae, risus.</p>
<p>Donec sit amet nisl. Aliquam semper ipsum sit amet velit. Suspendisse<br>id sem consectetuer libero luctus adipiscing.</p>
</blockquote>
<p>也可以只在引用区块每一个markdown段落的第一行的行首插入 &gt; ：</p>
<blockquote>
<p>This is a blockquote with two paragraphs. Lorem ipsum dolor sit amet,<br>consectetuer adipiscing elit. Aliquam hendrerit mi posuere lectus.<br>Vestibulum enim wisi, viverra nec, fringilla in, laoreet vitae, risus.</p>
<p>Donec sit amet nisl. Aliquam semper ipsum sit amet velit. Suspendisse<br>id sem consectetuer libero luctus adipiscing.</p>
</blockquote>
<p>markdown支持区块引用的嵌套：</p>
<blockquote>
<p>This is the first level of quoting.</p>
<blockquote>
<p>This is nested bl<br>Back to the first level.</p>
</blockquote>
</blockquote>
<p>引用区块内可以含有其它markdown元素， 包括标题，列表和代码块：</p>
<blockquote>
<h2 id="This-is-a-header"><a href="#This-is-a-header" class="headerlink" title="This is a header."></a>This is a header.</h2><ol>
<li>This is the first list item.</li>
<li>This is the second list item.</li>
</ol>
<p>Here’s some example code:</p>
<pre><code>return shell_exec(&quot;echo $input | $markdown_script&quot;);
</code></pre></blockquote>
<h1 id="链接"><a href="#链接" class="headerlink" title="链接"></a>链接</h1><p>markdown支持两种形式的链接：行内式和参考式。</p>
<h2 id="行内式"><a href="#行内式" class="headerlink" title="行内式"></a>行内式</h2><p>行内式：<a href="URL “可选的链接的title属性”">链接文字</a>。 例如：</p>
<p>This is <a href="http://example.com/" title="Title">an example</a> inline link.</p>
<p><a href="http://example.net/" target="_blank" rel="noopener">This link</a> has no title attribute.</p>
<h2 id="参考式"><a href="#参考式" class="headerlink" title="参考式"></a>参考式</h2><p>参考式：<a href="URL" title="可选的连接的title属性">链接文字</a>。然后， 在文档的任意一行，定义链接：</p>
<h1 id="代码块"><a href="#代码块" class="headerlink" title="代码块"></a>代码块</h1><p>代码块由缩进的一行或连续多行组成。当翻译成html时，代码块前后会分别加上<code>&lt;pre&gt;&lt;code&gt;</code>和<code>&lt;/code&gt;&lt;/pre&gt;</code>标签。例如，下列markdown：</p>
<p>This is a normal paragraph:</p>
<pre><code>This is a code block.
</code></pre><h2 id="行内代码块"><a href="#行内代码块" class="headerlink" title="行内代码块"></a>行内代码块</h2><p>Use the <code>printf()</code> function.</p>
<h1 id="强调"><a href="#强调" class="headerlink" title="强调"></a>强调</h1><blockquote>
<p>如果需要强调某些文字，可以使用 * 或 _ 包围它们。</p>
</blockquote>
<p><em>single asterisks</em></p>
<p><em>single underscores</em></p>
<p><strong>double asterisks</strong></p>
<p><strong>double underscores</strong></p>
<h2 id="超链接"><a href="#超链接" class="headerlink" title="超链接"></a>超链接</h2><p><a href="https://space.bilibili.com/27496282" target="_blank" rel="noopener">我的bilibili主页</a></p>
<h2 id="图片"><a href="#图片" class="headerlink" title="图片"></a>图片</h2><p><img src="https://images.wallpaperscraft.com/image/hologram_scheme_scifi_139294_3840x2160.jpg" alt="壁纸"></p>
<h1 id="列表"><a href="#列表" class="headerlink" title="列表"></a>列表</h1><h2 id="无序列表"><a href="#无序列表" class="headerlink" title="无序列表"></a>无序列表</h2><ul>
<li>无序列表项</li>
</ul>
<ul>
<li>无序列表项</li>
</ul>
<ul>
<li>无序列表项</li>
</ul>
<h2 id="有序列表"><a href="#有序列表" class="headerlink" title="有序列表"></a>有序列表</h2><ul>
<li>无序列表项<ul>
<li>第二层列表项</li>
<li>第二层列表项</li>
</ul>
</li>
<li>无序列表项</li>
<li>无序列表项</li>
</ul>
<h2 id="有序列表数字标识"><a href="#有序列表数字标识" class="headerlink" title="有序列表数字标识"></a>有序列表数字标识</h2><ol>
<li>有序列表项1</li>
<li>有序列表项2</li>
<li>有序列表项3</li>
</ol>
<h2 id="有序多级列表数字标识"><a href="#有序多级列表数字标识" class="headerlink" title="有序多级列表数字标识"></a>有序多级列表数字标识</h2><ol>
<li>有序列表项1<ol>
<li>有序列表项11</li>
<li>有序列表项12</li>
</ol>
</li>
<li>有序列表项3</li>
</ol>
<h1 id="分割线"><a href="#分割线" class="headerlink" title="分割线"></a>分割线</h1><hr>
<hr>
<hr>
<hr>
<iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width="330" height="86" src="//music.163.com/outchain/player?type=2&id=1642632&auto=0&height=66"></iframe>]]></content>
      <tags>
        <tag>随笔</tag>
      </tags>
  </entry>
</search>
