<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>学期计划</title>
    <url>/2020/10/03/%E5%AD%A6%E6%9C%9F%E8%AE%A1%E5%88%92/</url>
    <content><![CDATA[]]></content>
      <categories>
        <category>学术</category>
      </categories>
      <tags>
        <tag>随笔</tag>
      </tags>
  </entry>
  <entry>
    <title>Weather routing</title>
    <url>/2020/10/03/Weather-routing/</url>
    <content><![CDATA[<div id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">
  <div class="hbe-input-container">
  <input type="password" id="hbePass" placeholder="" />
    <label for="hbePass">You can contact me for a password</label>
    <div class="bottom-line"></div>
  </div>
  <script id="hbeData" type="hbeData" data-hmacdigest="50ed35313d1b1e841a9e67d64591ec192e723333a04653b06187ea207337a7c3">28d0995654ef65e4ddfbf4897c8bfd2e</script>
</div>
<script src="/lib/blog-encrypt.js"></script><link href="/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
      <categories>
        <category>学术</category>
      </categories>
      <tags>
        <tag>Science</tag>
      </tags>
  </entry>
  <entry>
    <title>LeetCode 118.杨辉三角</title>
    <url>/2020/09/06/LeetCode118/</url>
    <content><![CDATA[<h1 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h1><p>给定一个非负整数 numRows，生成杨辉三角的前 numRows 行。</p>
<p>在杨辉三角中，每个数是它左上方和右上方的数的和。</p>
<a id="more"></a>
<p><img src="https://s1.ax1x.com/2020/09/06/wmJfmt.gif" alt="wmJfmt.gif"></p>
<p>示例:</p>
<p>输入: 5</p>
<p>输出:<br>&emsp;&emsp;&ensp;[1],<br>&emsp;&emsp;[1,1],<br>&emsp;&ensp;[1,2,1],<br>&emsp;[1,3,3,1],<br>&ensp;[1,4,6,4,1]</p>
<p>来源：力扣（LeetCode）<br>链接：<a href="https://leetcode-cn.com/problems/pascals-triangle" target="_blank" rel="noopener">https://leetcode-cn.com/problems/pascals-triangle</a><br>著作权归领扣网络所有。商业转载请联系官方授权，非商业转载请注明出处。</p>
<h1 id="题解"><a href="#题解" class="headerlink" title="题解"></a>题解</h1><h2 id="动态规划"><a href="#动态规划" class="headerlink" title="动态规划"></a>动态规划</h2><pre><code>class Solution{
  public List&lt;List&lt;Integer&gt;&gt; generate(int numRows){
    List&lt;List&lt;Integer&gt;&gt; triangle = new ArrayList&lt;List&lt;Integer&gt;&gt;();

    //First base case; if user zero rows, they get zero rows.
    if(numRows == 0) {
      return triangle;
    }

    //Second base case; first row is always [1].
    triangle.add(new ArrayList&lt;&gt;());
    triangle.get(0).add(1);

    for (int rowNum = 1; rowNum &lt; numRows; rowNum++){
      List&lt;Integer&gt; row = new ArrayList&lt;&gt;();
      List&lt;Integer&gt; prevRow = triangle.get(rowNum-1);

      //The first row element is always 1.
      row.add(1);

      // Each triangle element (other than the first and last of each row)
      // is equal to the sum of the elements above-and-to-the-left and
      // above-and-to-the-right.
      for(int j=1;j&lt;rowNum;j++){
        row.add(prevRow.get(j-1) + prevRow.get(j));
      }

      //The last row element is always 1.
      row.add(1);

      triangle.add(row);

    }

    return triangle;
  }
}
</code></pre><h2 id="复杂度分析"><a href="#复杂度分析" class="headerlink" title="复杂度分析"></a>复杂度分析</h2><ul>
<li>时间复杂度：$O(numRows^2)O(numRows 2)$</li>
</ul>
<p>虽然更新<code>triangle</code>中的每个值都是在常量时间内发生的，但它会被执行$O(numRows^2)O(numRows^2)$次。</p>
<p>想要了解原因，就需要考虑总共有多少次循环迭代。很明显外层循环需要运行$numRows$次,但在外层循环的每次迭代中，内层循环要运行$rowNum$次。</p>
<p>因此，<code>triangle</code>发生的更新总数为$1 + 2 + 3 + \ldots + numRows1+2+3+…+numRows$，根据高斯公式有</p>
<script type="math/tex; mode=display">
\frac{numsRows(numRows+1)}{2}= \frac{numsRows^2+numRows}{2}=\frac{numsRows^2}{2}+\frac{numRows}{2}=O(numRows^2)</script><p>空间复杂度：$O(numRows^2)O(numRows^2)$</p>
<p>因为我们需要存储我们在<code>triangle</code>中更新的每个数字，所以空间需求与时间复杂度相同。</p>
]]></content>
      <categories>
        <category>刷题笔记</category>
      </categories>
      <tags>
        <tag>数组</tag>
      </tags>
  </entry>
  <entry>
    <title>LeetCode 88.合并两个有序数组</title>
    <url>/2020/09/06/Leetcode88/</url>
    <content><![CDATA[<h1 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h1><p>给你两个有序整数数组 nums1 和 nums2，请你将 nums2 合并到 nums1 中，使 nums1 成为一个有序数组。</p>
<a id="more"></a>
<h2 id="说明"><a href="#说明" class="headerlink" title="说明"></a>说明</h2><p>初始化 nums1 和 nums2 的元素数量分别为 m 和 n 。<br>你可以假设 nums1 有足够的空间（空间大小大于或等于 m + n）来保存 nums2 中的元素。</p>
<h2 id="示例"><a href="#示例" class="headerlink" title="示例"></a>示例</h2><p>输入:<br>nums1 = [1,2,3,0,0,0], m = 3<br>nums2 = [2,5,6],       n = 3</p>
<p>输出: [1,2,2,3,5,6]</p>
<p>来源：力扣（LeetCode）<br>链接：<a href="https://leetcode-cn.com/problems/merge-sorted-array" target="_blank" rel="noopener">https://leetcode-cn.com/problems/merge-sorted-array</a><br>著作权归领扣网络所有。商业转载请联系官方授权，非商业转载请注明出处。</p>
<h1 id="题解"><a href="#题解" class="headerlink" title="题解"></a>题解</h1><h2 id="0x01-合并后排序"><a href="#0x01-合并后排序" class="headerlink" title="0x01 合并后排序"></a>0x01 合并后排序</h2><h3 id="直觉"><a href="#直觉" class="headerlink" title="直觉"></a>直觉</h3><p>最朴素的解法就是将两个数组合并之后再排序。该算法只需要一行（Java是2行），时间复杂度较差，为$O((n+m)log(n+m))$。这是由于这种方法没有利用两个数组本身已经有序这一点。</p>
<h3 id="实现"><a href="#实现" class="headerlink" title="实现"></a>实现</h3><pre><code>class Solution {
  public void merge(int[] nums1, int m, int[] nums, int n){
    System.arraycopy(nums2, 0, nums1, m, n);
    Arrays.sort(nums1);
  }
}
</code></pre><h3 id="复杂度分析"><a href="#复杂度分析" class="headerlink" title="复杂度分析"></a>复杂度分析</h3><ul>
<li>时间复杂度：$O((n+m)log(n+m))$</li>
<li>空间复杂度：$O(1)$</li>
</ul>
<h2 id="0x02-双指针-从前往后"><a href="#0x02-双指针-从前往后" class="headerlink" title="0x02 双指针/从前往后"></a>0x02 双指针/从前往后</h2><h3 id="直觉-1"><a href="#直觉-1" class="headerlink" title="直觉"></a>直觉</h3><p>一般而言，对于有序数组可以通过 _双指针法_ 达到$O(n+m)$的时间复杂度。</p>
<p>最直接的算法实现是将指针<code>p1</code>置为<code>nums1</code>的开头，<code>p2</code>为<code>nums2</code>的开头，在每一步将最小值放入输出数组中。</p>
<p>由于<code>nums1</code>是用于输出的数组，需要将<code>nums1</code>中的前<code>m</code>个元素放在其他地方，也就需要$O(m)$的空间复杂度。</p>
<p><img src="https://s1.ax1x.com/2020/09/06/wZMyvT.png" alt="wZMyvT.png"></p>
<h3 id="实现-1"><a href="#实现-1" class="headerlink" title="实现"></a>实现</h3><pre><code>class Solution{
  public void merge(int[] nums1, int m, int[] nums2, int n){
    // Make a copy of nums1
    int [] nums1_copy = new int[m];
    System.arraycopy(nums1, 0, nums1_copy, 0, m);

    // Two get pointers for nums1_copy and nums2.
    int p1=0;
    int p2=0;

    // Set pointer for nums1
    int p=0;

    // Compare elements from nums1_copy and nums2
    // and add the smallest one into nums1.
    while((p1&lt;m)&amp;&amp;(p2&lt;n))
      nums1[p++] = (nums1_copy[p1] &lt; nums2[p2]) ? nums1_copy[p1++] : nums2[p2++];

    // if there are still elements to add
    if (p1 &lt; m)
      System.arraycopy(nums1_copy, p1, nums1, p1 + p2, m + n - p1 - p2);
    if (p2 &lt; m)
      System.arraycopy(nums2, p2, nums1, p1 + p2, m + n - p1 - p2);
  }
}
</code></pre><h3 id="复杂度分析-1"><a href="#复杂度分析-1" class="headerlink" title="复杂度分析"></a>复杂度分析</h3><ul>
<li>时间复杂度：$O(n+m)$</li>
<li>空间复杂度：$O(m)$</li>
</ul>
<h2 id="0x03-双指针-从后向前"><a href="#0x03-双指针-从后向前" class="headerlink" title="0x03 双指针/从后向前 "></a><font color="#FF0000">0x03 双指针/从后向前 </font></h2><h3 id="直觉-2"><a href="#直觉-2" class="headerlink" title="直觉"></a>直觉</h3><p>方法0x02已经取得了最优的时间复杂度$O(n+m)$，但需要使用额外空间。这是由于从头改变<code>nums1</code>的值时，需要把<code>nums1</code>中的元素存放在其他位置</p>
<blockquote>
<p>如果我们从结尾开始改写<code>nums1</code>的值又会如何呢？这里没有信息，因此不需要额外空间。</p>
</blockquote>
<p>这里的指针<code>p</code>用于追踪添加元素的位置。</p>
<p><img src="https://s1.ax1x.com/2020/09/06/wZlwpq.png" alt="wZlwpq.png"><br><img src="https://s1.ax1x.com/2020/09/06/wZlY7Q.png" alt="wZlY7Q.png"><br><img src="https://s1.ax1x.com/2020/09/06/wZlNkj.png" alt="wZlNkj.png"><br><img src="https://s1.ax1x.com/2020/09/06/wZlUts.png" alt="wZlUts.png"><br><img src="https://s1.ax1x.com/2020/09/06/wZlahn.png" alt="wZlahn.png"><br><img src="https://s1.ax1x.com/2020/09/06/wZl010.png" alt="wZl010.png"></p>
<h3 id="实现-2"><a href="#实现-2" class="headerlink" title="实现"></a>实现</h3><pre><code>class Solution {
  public void merge(int[] nums1, int m, int[] nums2, int n) {
    // two get pointers for nums1 and nums2
    int p1 = m - 1;
    int p2 = n - 1;
    // set pointer for nums1
    int p = m + n - 1;

    // while there are still elements to compare
    while ((p1 &gt;= 0) &amp;&amp; (p2 &gt;= 0))
    // compare two elements from nums1 and nums2 
    // and add the largest one in nums1 
    nums1[p--] = (nums1[p1] &lt; nums2[p2]) ? nums2[p2--] : nums1[p1--];

    // add missing elements from nums2
    System.arraycopy(nums2, 0, nums1, 0, p2 + 1);
  }
}
</code></pre><h3 id="复杂度分析-2"><a href="#复杂度分析-2" class="headerlink" title="复杂度分析"></a>复杂度分析</h3><ul>
<li>时间复杂度：$O(n+m)$</li>
<li>空间复杂度：$O(1)$</li>
</ul>
]]></content>
      <categories>
        <category>刷题笔记</category>
      </categories>
      <tags>
        <tag>数组</tag>
        <tag>双指针</tag>
      </tags>
  </entry>
  <entry>
    <title>支持向量机（非线性模型）</title>
    <url>/2020/08/30/%E6%94%AF%E6%8C%81%E5%90%91%E9%87%8F%E6%9C%BA%EF%BC%88%E9%9D%9E%E7%BA%BF%E6%80%A7%E6%A8%A1%E5%9E%8B%EF%BC%89/</url>
    <content><![CDATA[<h1 id="课程回顾"><a href="#课程回顾" class="headerlink" title="课程回顾"></a>课程回顾</h1><p>SVM是最大化间隔(Margin)的分类算法</p>
<p>优化问题：训练样本<br><a id="more"></a></p>
<script type="math/tex; mode=display">
\left \{ \left ( x_i,y_i \right) \right \} _ {i=1 \sim N}</script><p>最小化：</p>
<script type="math/tex; mode=display">
\frac{1}{2}\left \| \omega \right \|^2</script><p>限制条件：</p>
<script type="math/tex; mode=display">
y_i[\omega^Tx_i+b]\ge1(i=1 \sim n)</script><blockquote>
<p>如果上述训练样本线性可分，则一定可以做出一条线将他们分开。同时最小值一定有解。</p>
<p>如果不是线性可分，则最小值一定无解</p>
<p>非线性模型则改变最优化的问题，使它在非线性的情况下也有最优解</p>
</blockquote>
<h1 id="SVM处理非线性"><a href="#SVM处理非线性" class="headerlink" title="SVM处理非线性"></a>SVM处理非线性</h1><h2 id="最小化："><a href="#最小化：" class="headerlink" title="最小化："></a><strong>最小化：</strong></h2><script type="math/tex; mode=display">
\frac{1}{2}\left \| \omega \right \|^2 +C\sum_{i=1}^{n} \xi_i</script><p>($\xi_i$为松弛变量Slack Variable)</p>
<p>($C\sum_{i=1}^{n} \xi_i$为正则项Regulation Term)</p>
<p>(正则项中的$C$是事先设定的参数，是用来平衡$\omega$项和正则项在最后的目标函数中的权重)</p>
<h2 id="限制条件："><a href="#限制条件：" class="headerlink" title="限制条件："></a><strong>限制条件：</strong></h2><script type="math/tex; mode=display">
y_i[\omega^Tx_i+b]\ge1-\xi_i(i=1\sim n)\\
\xi_i\ge0</script><blockquote>
<p>要限制$\xi_i$不能特别大，否则限制条件虽然会被满足，但优化问题会变得非常发散</p>
</blockquote>
<h1 id="低维到高维映射"><a href="#低维到高维映射" class="headerlink" title="低维到高维映射"></a>低维到高维映射</h1><p>高维映射$\varphi(x)$：<code>把低维的矢量映射到高维，在高维里面找直线</code></p>
<script type="math/tex; mode=display">x \rightarrow \varphi(x)</script><p>考虑如下异或问题</p>
<p><a href="https://imgchr.com/i/wPhKER" target="_blank" rel="noopener"><img src="https://s1.ax1x.com/2020/09/03/wPhKER.th.png" alt="wPhKER.th.png"></a></p>
<script type="math/tex; mode=display">
x_1=\begin{bmatrix}
0\\
0\end{bmatrix}\in C_1

x_2=\begin{bmatrix}
1\\
1\end{bmatrix}\in C_1
\\
x_3=\begin{bmatrix}
1\\
0\end{bmatrix}\in C_2

x_4=\begin{bmatrix}
0\\
1\end{bmatrix}\in C_2</script><p>该例子属于线性不可分，但如果我们定义由二维至五维的映射$\varphi(x)$</p>
<script type="math/tex; mode=display">
{\color{RoyalBlue}\varphi(x):x=\begin{bmatrix}
a\\
b
\end{bmatrix}
\to
\varphi(x)=\begin{bmatrix}
a^2\\
b^2\\
a\\
b\\
ab\end{bmatrix}}
\\</script><p>则有：</p>
<script type="math/tex; mode=display">
\varphi(x_1)=\begin{bmatrix}
0\\
0\\
0\\
0\\
0\end{bmatrix}\in {\color{Purple}C_1}
\varphi(x_2)=\begin{bmatrix}
1\\
1\\
1\\
1\\
1\end{bmatrix}\in {\color{Purple}C_1}
\\
\varphi(x_3)=\begin{bmatrix}
1\\
0\\
1\\
0\\
0\end{bmatrix}\in {\color{Orange}C_2}
\varphi(x_4)=\begin{bmatrix}
0\\
1\\
0\\
1\\
0\end{bmatrix}\in {\color{Orange}C_2}
\\</script><p>对于以上的$\varphi(x_i)$的值,需要给出$\omega$和$b$的值，使限制条件${\color{RoyalBlue}y_i[\omega^T\varphi(x_i)+b]\ge1(i=1 \sim n)}$成立，<br>可以设：</p>
<script type="math/tex; mode=display">
\omega=\begin{bmatrix}
-1\\
-1\\
-1\\
-1\\
6\end{bmatrix}
b=1</script><p>则：</p>
<script type="math/tex; mode=display">
\begin{split}
&\omega^T\varphi(x_1)+b=1 \in C_1\\
&\omega^T\varphi(x_2)+b=3 \in C_1\\
&\omega^T\varphi(x_3)+b=-1 \in C_2\\
&\omega^T\varphi(x_4)+b=-1 \in C_2\\
\end{split}</script><pre><code>在特征空间里随机的选一些点，同时把所选的点随机的标上圆圈和叉，在越高维的特征空间里做这个操作，这些点被线性分开的概率越大。
在无限维的特征空间里做这个操作，被线性分开的概率是1
</code></pre><p>$\varphi(x)$可以是无限维，若$\varphi(x)$是无限维的情况下，$\omega^T$也是无限维的，则变得不可操作。</p>
<h1 id="核函数"><a href="#核函数" class="headerlink" title="核函数"></a>核函数</h1><p>我们可以不知道无限维映射$\varphi(x)$的显式表达，我们只要知道一个核函数(Kernel Function)</p>
<script type="math/tex; mode=display">
{\color{RoyalBlue}K(x_1,x_2)=\varphi(x_1)^T\varphi(x_2)}</script><p>(K是一个数，等号右侧是$\varphi(x_1)$和$\varphi(x_2)$两个无限向量的内积)</p>
<blockquote>
<p>对于任何两个向量$x_1 x_2$都能算出K，不需要找出$\varphi$的具体形式，此优化问题一样可解</p>
</blockquote>
<p>则$y_i[\omega^T\varphi(x_i)+b]\ge1(i=1\sim n)$这个优化式仍可解。</p>
<h2 id="高斯核函数"><a href="#高斯核函数" class="headerlink" title="高斯核函数"></a><a href="https://baike.baidu.com/item/%E9%AB%98%E6%96%AF%E6%A0%B8%E5%87%BD%E6%95%B0/6661425?fr=aladdin" target="_blank" rel="noopener">高斯核函数</a></h2><script type="math/tex; mode=display">
{\Large K(x_1,x_2)=e^{-\frac{\left \|  x_1-x_2 \right \|^2}{2\sigma^2}}=\varphi(x_1)^T\varphi(x_2)}</script><blockquote>
<p>上式的$\varphi(x)$是无限维度的</p>
</blockquote>
<h2 id="多项式核函数"><a href="#多项式核函数" class="headerlink" title="多项式核函数"></a>多项式核函数</h2><script type="math/tex; mode=display">
K(x_1,x_2)=(x_1^Tx_2+1)^d=\varphi(x_1)^T\varphi(x_2)</script><blockquote>
<p>$d$是多项式阶数 上式的$\varphi(x)$是有限维度的</p>
</blockquote>
<h2 id="Mercer’s-Theorem"><a href="#Mercer’s-Theorem" class="headerlink" title="Mercer’s Theorem"></a>Mercer’s Theorem</h2><p>泛函分析中的$Mercer$定理：任何半正定的函数都可以作为核函数。所谓半正定的函数$f(x_i,x_j)$，是指拥有训练数据集合$(x_1,x_2,…x_n)$，我们定义一个矩阵的元素$a_{ij} = f(x_i,x_j)$，这个矩阵式$n*n$的，如果这个矩阵是半正定的，那么$f(x_i,x_j)$就称为半正定的函数。这个$Mercer$定理是核函数必要条件.</p>
<p>$K(x_1,x_2)$能写成$\varphi(x_1)^T\varphi(x_2)$的充要条件：</p>
<ul>
<li><script type="math/tex; mode=display">K(x_1,x_2)=K(x_2,x_1)（交换性）</script></li>
<li><script type="math/tex; mode=display">\forall C_i,x_i (i \sim N)有：\sum_{i=1}^{N}\sum_{j=1}^{N} C_i C_j K(x_i,x_j)\ge0 （半正定性）</script></li>
</ul>
<h1 id="原问题和对偶问题"><a href="#原问题和对偶问题" class="headerlink" title="原问题和对偶问题"></a>原问题和对偶问题</h1><p>优化理论推荐书籍：</p>
<ol>
<li><p><a href="https://web.stanford.edu/~boyd/cvxbook/" target="_blank" rel="noopener">《Convex optimization》</a>Stephen Boyd &amp; Lieven Vandenberghe.&ensp; <a href="https://web.stanford.edu/~boyd/cvxbook/bv_cvxbook.pdf" target="_blank" rel="noopener">Convex optimization.pdf</a> </p>
</li>
<li><p><a href="https://labs.xjtudlc.com/labs/wldmt1/books/Optimization/Nonlinear%20programming%20Theory%20and%20Algorithms.pdf" target="_blank" rel="noopener">《Nonlinear Programming》</a></p>
</li>
</ol>
<h2 id="原问题-Prime-Problem"><a href="#原问题-Prime-Problem" class="headerlink" title="原问题 Prime Problem"></a>原问题 Prime Problem</h2><p><code>原问题非常普适</code></p>
<p>最小化：$f(\omega)$</p>
<p>限制条件：$g_i(\omega)\le0(i=1 \sim K)$</p>
<p>&emsp;&emsp;&emsp;$h_i(\omega)=0(i=1 \sim M)$</p>
]]></content>
      <categories>
        <category>学习笔记</category>
      </categories>
      <tags>
        <tag>Machine-Learning</tag>
      </tags>
  </entry>
  <entry>
    <title>支持向量机（线性模型）</title>
    <url>/2020/08/26/%E6%94%AF%E6%8C%81%E5%90%91%E9%87%8F%E6%9C%BA%EF%BC%88%E7%BA%BF%E6%80%A7%E6%A8%A1%E5%9E%8B%EF%BC%89/</url>
    <content><![CDATA[<h1 id="01-教科书介绍"><a href="#01-教科书介绍" class="headerlink" title="01 教科书介绍"></a>01 教科书介绍</h1><p>（1）机器学习，周志华，清华大学出版社，2016 （知识点全面，编程方面薄弱）</p>
<p>（2）统计学习方法，李航，清华大学出版社，2012（数学推导丰富清楚）<br><a id="more"></a><br>（3）Machine Learning in Action, P.Harrington,人民邮电出版社</p>
<p>（4）Pattern Recognition and Machine Learning （模式识别与机器学习），Christopher M. Bishop, 2006</p>
<p>（5） Machine Learning: A Probabilistic Perspective, K. P. Murphy,  （概率论角度讲述机器学习）</p>
<p>（6）Machine Learning （机器学习）, Tom M. Mitchell, 机械工业出版社，2003年，（机器学习领域最早的一本教科书）</p>
<p>（7）Deep Learning, I. Goodfellow, Y. Bengio and A. Courville, 2016.（网络上公开可以下载）</p>
<p>（8）<a href="https://www.coursera.org/course/ml" target="_blank" rel="noopener">Stanfrod Web course by Andrew Ng</a></p>
<p>（9）<a href="https://cs231n.Stanford.edu" target="_blank" rel="noopener">Stanfrod Web course by Fei-fei Li</a></p>
<hr>
<h1 id="02-没有免费午餐定理-No-Free-Lunch-Theorem"><a href="#02-没有免费午餐定理-No-Free-Lunch-Theorem" class="headerlink" title="02 没有免费午餐定理(No Free Lunch Theorem)"></a>02 没有免费午餐定理(No Free Lunch Theorem)</h1><p>“没有免费午餐定理”（No Free Lunch Theorem）: 任何一个预测函数，如果在一些训练样本上表现好，那么必然在另一些训练样本上表现不好，表现好与表现不好的情况一样多。</p>
<p><strong>如果我们不对特征空间有先验假设，则所有算法的平均表现是一样的</strong></p>
<p><strong>我们认为：特征差距小的样本更有可能是同一类</strong></p>
<h1 id="03-概念介绍"><a href="#03-概念介绍" class="headerlink" title="03 概念介绍"></a>03 概念介绍</h1><h2 id="Three-categories-of-machine-learning-algorithms"><a href="#Three-categories-of-machine-learning-algorithms" class="headerlink" title="Three categories of machine learning algorithms:"></a>Three categories of machine learning algorithms:</h2><ul>
<li>Supervised learning - SVM , NEURAL NETWORKS</li>
<li>Unsupervised learning - CLUSTERING , EMALGORITHM PCA</li>
<li>Semi-Supervised Learning （前三类基于是否标签分类，均有目标，对于测试数据，我们的算法要预测测试数据的标签）</li>
<li>Reinforcemenet Learning (基于是否有目标 (eg.自动驾驶 计算机下棋) 关注点在最后的结果)</li>
</ul>
<p>Supervised learning : The machine learning task of inferring a function from labeled training data.</p>
<p>Supervised learning can be further divided into <strong>classification</strong> and <strong>regression</strong></p>
<blockquote>
<p>classification(分类) 表示离散的值</p>
<p>regression(回归) 表示所有的标签是连续的值</p>
</blockquote>
<p>Task 1 : Face Verification</p>
<p>目前来说，在人脸识别任务中，是一个classification问题，标签是离散的。</p>
<p>Task : Face Age Estimation &amp; Gender Identification</p>
<p>预测年龄是一个regression问题</p>
<p>分类和回归没有明确的界限 两个问题的算法基本通用</p>
<h1 id="04-支持向量机（线性模型）问题-Support-Vector-Machine"><a href="#04-支持向量机（线性模型）问题-Support-Vector-Machine" class="headerlink" title="04 支持向量机（线性模型）问题 (Support Vector Machine)"></a>04 支持向量机（线性模型）问题 (Support Vector Machine)</h1><p>对于样本数较小的问题 用支持向量机都会得到比较好的结果</p>
<p>该方法由苏联人Vapnik发明</p>
<h2 id="线性模型"><a href="#线性模型" class="headerlink" title="线性模型"></a>线性模型</h2><p>一条直线可分开样本集class1 &amp; class2 叫线性可分训练样本集(Linear Separable)，相对的有：非线性可分(Non-linear Separable)</p>
<blockquote>
<p><a href="https://imgchr.com/i/dWqW24" target="_blank" rel="noopener"><img src="https://s1.ax1x.com/2020/08/26/dWqW24.th.png" alt="dWqW24.th.png"></a></p>
<p>假定特征的测量是有误差的，2号线对于误差的容忍程度多一点</p>
</blockquote>
<h2 id="2号线如何取"><a href="#2号线如何取" class="headerlink" title="2号线如何取"></a>2号线如何取</h2><p>首先定义一个衡量每一条线的一个标准（性能指标）</p>
<ol>
<li>对于每一条线都能算出一个性能指标</li>
<li>2号线对于此性能指标能算到最大</li>
</ol>
<p>对于任何一条可分开样本集的线，向一侧平行地移动，直到插到样本集class1的某一个或某几个样本；再向另一侧平移，直到插到样本集class2的某一个或某几个样本。</p>
<blockquote>
<p><a href="https://imgchr.com/i/dWxwxU" target="_blank" rel="noopener"><img src="https://s1.ax1x.com/2020/08/26/dWxwxU.th.png" alt="dWxwxU.th.png"></a></p>
<p>$d$:间隔(Margin)</p>
<p>_最大化间隔则能得到2号线_</p>
<p>将平行线插到的向量叫支持向量(support vector)</p>
<p>画出这条线，只跟支持向量有关，所以适合用在小样本的问题上。</p>
</blockquote>
<p><strong>定义：</strong><br>1、训练数据和标签<br>$(x_1,y_1) (x_2,y_2)……(x_N,y_N)$<br>，所有的$x$都是一个向量，$y$是标签，$y_i=+1或-1$</p>
<blockquote>
<p>要找一条直线 二维时是一条直线 三维时是一个平面 四维或大于四维时都是超平面</p>
</blockquote>
<p>2、线性模型：超平面参数：$(\omega,b)$ 超平面(Hyperplane)线性方程表达式：$\omega^{T}x+b=0$</p>
<blockquote>
<p>$x_1$是向量 $y$是标签 </p>
<p>$\omega$是向量 $b$是常数 </p>
<p>$\omega$转置后与$x_1$相乘得常数  </p>
<p>$\omega$也是一个向量 它的维度和$x$的维度是一样的</p>
<script type="math/tex; mode=display">
x_{1}=
\begin{pmatrix}  
 x_{11}  \\  
 \vdots  \\  
 x_{1m}  \\
\end{pmatrix}</script><script type="math/tex; mode=display">
\omega_{1}=
\begin{pmatrix}  
 \omega_{11}  \\  
 \vdots       \\  
 \omega_{1m}  \\
\end{pmatrix}</script><p>机器学习过程：通过训练数据在模型的限定下把$\omega$和$b$求出来</p>
</blockquote>
<h2 id="线性可分数学定义"><a href="#线性可分数学定义" class="headerlink" title="线性可分数学定义"></a>线性可分数学定义</h2><p>一个训练集线性可分是指$\left \{ \left ( x_{i},y_{i} \right )  \right \} _{i=1\sim N}$<br>$\exists \left ( \omega ,b \right )$ ，使：对  $\forall i=1\sim N$有：</p>
<ol>
<li><p>若 $y_i=+1$ , 则<br>$\omega^{T}x_{i}+b\ge 0$ \\</p>
</li>
<li><p>若 $y_i=-1$ , 则<br>$\omega^{T}x_{i}+b&lt;0$</p>
</li>
</ol>
<blockquote>
<p>写成<br>$\omega^{T}x_{i}+b\le 0$</p>
<p>$\omega^{T}x_{i}+b&gt;0$<br>也是完全一样的<br>$<br>\left ( \omega ,b \right ) = -\left ( \omega’ ,b’ \right )<br>$</p>
</blockquote>
<p>上述1.和2.在$y_{i}$取+1和-1的情况下可以简化合并为：</p>
<script type="math/tex; mode=display">
\begin{equation}
y_{i}[\omega^{T}x_{i}+b]\ge0
\end{equation}</script><h2 id="支持向量机的优化问题："><a href="#支持向量机的优化问题：" class="headerlink" title="支持向量机的优化问题："></a>支持向量机的优化问题：</h2><p>  这里的优化问题是一个<a href="https://zhuanlan.zhihu.com/p/85408804" target="_blank" rel="noopener">凸优化</a>问题，其中的二次规划问题。</p>
<pre><code>二次规划问题(Quadratic Programming)：

 1. 目标函数(Objective Function)是二次项

 2. 限制条件是一次项

结果要么无解，要么只有一个极值
</code></pre><p>最小化(Minimize):</p>
<script type="math/tex; mode=display">\left \| \omega \right \|^2</script><blockquote>
<p>最小化(Minimize)也可写成</p>
<script type="math/tex; mode=display">
\frac{1}{2}\left \| \omega \right \|^2</script><p>好处是求导方便</p>
</blockquote>
<p>限制条件(Subject to):</p>
<script type="math/tex; mode=display">y_i[\omega^Tx_{i}+b]\ge1  (i=1\sim n)</script><blockquote>
<p>限制条件(Subject to)$\ge$右侧的1可以改为任意整数，求出的结果都是同一个平面，它们的差距只有一个常数$a$</p>
<p>如果数据集线性不可分，所有的$\omega$和$b$都不可能满足限制条件(Subject to)</p>
</blockquote>
<p>事实1：$\omega^Tx+b=0$ 与 $a\omega^Tx+ab=0$是同一个平面。$a\in R^+$</p>
<p>若$(\omega,b)$满足公式1，则$(a\omega,ab)$也满足公式(1) (前提是$a$是一个正数，是负数的话公式久就倒了)</p>
<p>事实2：点到平面距离公式，<br>平面：$\omega_1x+\omega_2y+b=0$，<br>则$(x_0,y_0)$到此平面的距离：</p>
<script type="math/tex; mode=display">
d=\frac{\left|\omega_1 x_0+\omega_2 y_0+b\right|}{\sqrt{\omega_1^2+\omega_2^2}}</script><p>向量$x_0$到超平面$\omega^Tx+b=0$的距离：</p>
<script type="math/tex; mode=display">
d=\frac{\left| \omega^Tx_0+b \right|}{\left \| \omega \right \|} 其中 \left \| \omega \right \| = \sqrt{\omega_1^2+\omega_2^2+ \cdots +\omega_m^2}</script><blockquote>
<script type="math/tex; mode=display">
\left \| \omega \right \| = \sqrt{\omega_1^2+\omega_2^2+ \cdots +\omega_m^2}</script><p>也叫作<a href="https://baike.baidu.com/item/%E8%8C%83%E6%95%B0/10856788?fr=aladdin" target="_blank" rel="noopener">2-范数</a>，就是通常意义下的距离。</p>
<p>我们可以用$a$去缩放</p>
<script type="math/tex; mode=display">(\omega,b)-->(a\omega,ab)</script><p>最终使在支持向量上有：</p>
<script type="math/tex; mode=display">
\left|\omega^Tx_0+b\right |=1</script><p>此时支持向量与平面距离</p>
<script type="math/tex; mode=display">
d=\frac{1}{\left\| \omega \right\|}</script></blockquote>
<hr>
<blockquote>
<p>支持向量机的理论推导 :  <a href="https://kdocs.cn/l/chTOq7Uj9qL1[金山文档" target="_blank" rel="noopener">https://kdocs.cn/l/chTOq7Uj9qL1[金山文档</a>] 1. 支持向量机的理论推导.pdf</p>
</blockquote>
]]></content>
      <categories>
        <category>学习笔记</category>
      </categories>
      <tags>
        <tag>Machine-Learning</tag>
      </tags>
  </entry>
  <entry>
    <title>研究方法归纳</title>
    <url>/2020/08/05/%E7%A0%94%E7%A9%B6%E6%96%B9%E6%B3%95%E5%BD%92%E7%BA%B3/</url>
    <content><![CDATA[<h1 id="蒙特卡洛方法"><a href="#蒙特卡洛方法" class="headerlink" title="蒙特卡洛方法"></a>蒙特卡洛方法</h1><h2 id="提出"><a href="#提出" class="headerlink" title="提出"></a>提出</h2><p>蒙特卡罗方法于20世纪40年代美国在第二次世界大战中研制原子弹的“曼哈顿计划”计划的成员S.M.乌拉姆和J.冯·诺伊曼首先提出。数学家冯·诺伊曼用驰名世界的赌城—摩纳哥的Monte Carlo—来命名这种方法，为它蒙上了一层神秘色彩。在这之前，蒙特卡罗方法就已经存在。1777年，法国数学家布丰（Georges Louis Leclere de Buffon，1707—1788）提出用投针实验的方法求圆周率π。这被认为是蒙特卡罗方法的起源。<br><a id="more"></a></p>
<h2 id="基本思想"><a href="#基本思想" class="headerlink" title="基本思想"></a>基本思想</h2><p>当所求解问题是某种随机事件出现的概率，或者是某个随机变量的期望值时，通过某种“实验”的方法，以这种事件出现的频率估计这一随机事件的概率，或者得到这个随机变量的某些数字特征，并将其作为问题的解。</p>
<h2 id="主要步骤"><a href="#主要步骤" class="headerlink" title="主要步骤"></a>主要步骤</h2><p>蒙特卡罗方法的解题过程可以归结为三个主要步骤：构造或描述概率过程；实现从已知概率分布抽样；建立各种估计量。</p>
<ul>
<li>构造或描述概率过程</li>
</ul>
<p>对于本身就具有随机性质的问题，如粒子输运问题，主要是正确描述和模拟这个概率过 程，对于本来不是随机性质的确定性问题，比如计算定积分，就必须事先构造一个人为的概率过程，它的某些参量正好是所要求问题的解。即要将不具有随机性质的问题转化为随机性质的问题。</p>
<ul>
<li>实现从已知概率分布抽样</li>
</ul>
<p>构造了概率模型以后，由于各种概率模型都可以看作是由各种各样的概率分布构成的，因此产生已知概率分布的随机变量（或随机向量），就成为实现蒙特卡罗方法模拟实验的基本手段，这也是蒙特卡罗方法被称为随机抽样的原因。最简单、最基本、最重要的一个概率分布是（0，1）上的均匀分布（或称矩形分布）。随机数就是具有这种均匀分布的随机变量。随机数序列就是具有这种分布的总体的一个简单子样，也就是一个具有这种分布的相互独立的随机变数序列。产生随机数的问题，就是从这个分布的抽样问题。</p>
<p>在计算机上，可以用物理方法产生随机数，但价格昂贵，不能重复，使用不便。另一种方法是用数学递推公式产生。这样产生的序列，与真正的随机数序列不同，所以称为伪随机数，或伪随机数序列。不过，经过多种统计检验表明，它与真正的随机数，或随机数序列具有相近的性质，因此可把它作为真正的随机数来使用。由已知分布随机抽样有各种方法，与从(0,1)上均匀分布抽样不同，这些方法都是借助于随机序列来实现的，也就是说，都是以产生随机数为前提的。由此可见，随机数是我们实现蒙特卡罗模拟的基本工具。</p>
<ul>
<li>建立各种估计量</li>
</ul>
<p>一般说来，构造了概率模型并能从中抽样后，即实现模拟实验后，我们就要确定一个随机变量，作为所要求的问题的解，我们称它为无偏估计。建立各种估计量，相当于对模拟实验的结果进行考察和登记，从中得到问题的解。</p>
<h2 id="数学应用"><a href="#数学应用" class="headerlink" title="数学应用"></a>数学应用</h2><p>通常蒙特·卡罗方法通过构造符合一定规则的随机数来解决数学上的各种问题。对于那些由于计算过于复杂而难以得到解析解或者根本没有解析解的问题，蒙特·卡罗方法是一种有效的求出数值解的方法。一般蒙特·卡罗方法在数学中最常见的应用就是蒙特·卡罗积分。</p>
<h2 id="工作过程"><a href="#工作过程" class="headerlink" title="工作过程"></a>工作过程</h2><p>在解决实际问题的时候应用蒙特·卡罗方法主要有两部分工作：</p>
<ul>
<li>用蒙特·卡罗方法模拟某一过程时，需要产生某一概率分布的随机变量。</li>
<li>用统计方法把模型的数字特征估计出来，从而得到实际问题的数值解。</li>
</ul>
<h2 id="分子模拟计算"><a href="#分子模拟计算" class="headerlink" title="分子模拟计算"></a>分子模拟计算</h2><p>使用蒙特·卡罗方法进行分子模拟计算是按照以下步骤进行的： </p>
<ul>
<li>使用随机数发生器产生一个随机的分子构型。</li>
<li>对此分子构型的其中粒子坐标做无规则的改变，产生一个新的分子构型。</li>
<li>计算新的分子构型的能量。</li>
<li><p>比较新的分子构型于改变前的分子构型的能量变化，判断是否接受该构型。</p>
<blockquote>
<p>若新的分子构型能量低于原分子构型的能量，则接受新的构型，使用这个构型重复再做下一次迭代。 若新的分子构型能量高于原分子构型的能量，则计算玻尔兹曼因子，并产生一个随机数。若这个随机数大于所计算出的玻尔兹曼因子，则放弃这个构型，重新计算。 若这个随机数小于所计算出的玻尔兹曼因子，则接受这个构型，使用这个构型重复再做下一次迭代。</p>
</blockquote>
</li>
<li><p>如此进行迭代计算，直至最后搜索出低于所给能量条件的分子构型结束。</p>
</li>
</ul>
<h2 id="项目管理"><a href="#项目管理" class="headerlink" title="项目管理"></a>项目管理</h2><p>项目管理中蒙特·卡罗模拟方法的一般步骤是：</p>
<ul>
<li>对每一项活动，输入最小、最大和最可能估计数据，并为其选择一种合适的先验分布模型；</li>
<li>计算机根据上述输入，利用给定的某种规则，快速实施充分大量的随机抽样</li>
<li>对随机抽样的数据进行必要的数学计算，求出结果</li>
<li>对求出的结果进行统计学处理，求出最小值、最大值以及数学期望值和单位标准偏差</li>
<li>根据求出的统计学处理数据，让计算机自动生成概率分布曲线和累积概率曲线(通常是基于正态分布的概率累积S曲线)</li>
<li>依据累积概率曲线进行项目风险分析。</li>
</ul>
<h2 id="力学应用"><a href="#力学应用" class="headerlink" title="力学应用"></a>力学应用</h2><p>在力学中，蒙特卡罗方法多被用来求解稀薄气体动力学问题，其中最为成功的是澳大利亚G.A.伯德等人发展的直接模拟统计试验法。</p>
<p>此法通过在计算机上追踪几千个或更多的模拟分子的运动、碰撞及其与壁面的相互作用，以模拟真实气体的流动。它的基本假设与玻耳兹曼方程一致，但它是通过追踪有限个分子的空间位置和速度来代替计算真实气体中分布函数。模拟的相似条件是流动的克努曾数（Kn）相等，即数密度与碰撞截面之积保持常数。对每个分子分配以记录其位置和速度的单元。在模拟过程中分别考虑分子的运动和碰撞，在此平均碰撞时间间隔内，分别计算分子无碰撞的运动和典型碰撞。若空间网格取得足够小，其中任意两个分子都可以互相碰撞。</p>
<p>具体决定哪两个刚体分子相撞，是随机取一对分子，计算它们的相对速度，根据此值与最大相对速度的比值和随机取样比较的结果，来决定该对分子是否入选。碰撞后分子的速度根据特定分子模型的碰撞力学和随机取样决定。分子与壁面碰撞后的速度，则根据特定的反射模型和随机取样决定。</p>
<p>对于运动分子的位置和速度的追踪和求矩可以得出气体的密度、温度、速度等一些感兴趣的宏观参量。而对于分子与壁面间的动量和能量交换的记录则给出阻力、举力和热交换系数等的数学期望值。</p>
]]></content>
      <categories>
        <category>学术</category>
      </categories>
      <tags>
        <tag>Science</tag>
      </tags>
  </entry>
  <entry>
    <title>交通流理论笔记</title>
    <url>/2020/07/02/%E4%BA%A4%E9%80%9A%E6%B5%81%E7%90%86%E8%AE%BA%E7%AC%94%E8%AE%B0/</url>
    <content><![CDATA[<div id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">
  <div class="hbe-input-container">
  <input type="password" id="hbePass" placeholder="" />
    <label for="hbePass">You can contact me for a password</label>
    <div class="bottom-line"></div>
  </div>
  <script id="hbeData" type="hbeData" data-hmacdigest="dc5e2e2b7589b50b449576ab924ab6b6bf0a48aea579f1812a9fb795684dd87c">5343958463cf41a95f73f8321bff96fd05eb026712ed751421db4993db2e3c7c0011c0c130f94359174c8593d153e46aa72bed9c46d8949056ebb7aa80ec170d4cb8071b0bfb9a9fe72b83438f701d33501afdcb7ab9d7d49314fef1e91f16a2dbe0d06798d11d1e13697db39cf3cc91ae124cfe95b2dbbaafea32945f6514f100fd7bb80bfca6d333d26e13bd1d8655821af3f5a57cdae7270106c969d2cec0781b6109d952bf6e8d077c957e2561b9a26a99fa734948da9ecd2094970e59e3a7cf9bac0f3100b6ab36d4430b9a7427ec82e42eb74476a2a86d77a943bfe605e0759cbf7f512875ba48b7e04ce5a62ce5101e98439ec7cc955407f2fdd7360498bc3fe23971985a7fb7c5dd5e99caf9aa1142a172419ef8805257b12caa3c721335af5763239cd48feb8c396ef99af5508e706d7f8cee98e5ce07c0f86a8a530bac3abf6bc7c1e466eae4750f02332f98236c6ba24e5c0dbe3a159b33fe8d6ffeef5115172bc85a65b1a781ddbde4d00bec4fc75ed817c8d3301bca509b9b90732838c1d2d7ab948a74e4980a289aa136e8ab768a1cecd30fdfab6b1e7e85eb89dff08758169e60a24c6b7055d8ad68d644ef9b25d37b00a3cdd82b0e418d6bd65310b20763c9b27ef64aedf01f9ccfd97a6d451861f5095290f5f62d8b5e57aa661f954f2d4f98fab10b2a4f5bb837e9f2a6c98f781bad0e06d0bc6cfa62c3e6a1b11068abfd9c3e855b39a96178c4a8e31898aea9ee3d2c6db59ff865d4b5824d2853e09cccd920250e4d28c63c3bce888fc16d833da3136099dcb7c639468d48d73282851374c57a34be6f97421344a699f8872bbe3d8396ee521edfe72725a7558449677a35d87b78509ab3e0e1c14ccd25a8607eda2995ee00b09787bdf28d357ab2c24d06f835d815200b0300253037bdf0079b0612221477032a0151e9cd0fe68c13b799520fd3d520fe1f4538f6555c3d4505f7639d2cda15dfa077d0caf1d26c321f02eb9f9760647e4859f0ef2161544d9fedcded9f70d9bfde36a6f9e4c173cc68cb1a475fdf910aba9957e9889c067ca4aa4fa5f3188710b782c4d4d4d07eda7c07befffb8b090532869ba31fb37fed15f8980aa983c8b237c38e8059bafac69c55489d625e91a98b198a146aa20b6c7d1cf67fed1951b4c5e81cedebf6b2295055a45bf5adf706d8821ff108a92c091a211ee151863f21d718c576610d81938ba3fa1f1cefc0d9ea1b7c477f204f00200ec3bfa2009168b23df298483f3f669085ba7418d9e3bccbf537b3405a47dec410d07326c91d10d4e0ca6ff80c643109ca33fae641a05544c57c08d13fd4834bebaba78e563fb2b0e2b3b1c9458718761af36c403b87fd7a6bf97fef99273de985b282f822516433e7b7a85d2d54f1a9a34ad60563c8e30e68851a54fadb40ece8ae8a5bc3fc37c828d356da1b0ac901056d2631d03a16bf7a45d570666fbf8e5eddcaaddbb02bb8f7d0f0701d4936cf7169408b7346ebdfcc1ac9093b7b7081da6f6a45fc3eeb4dfa9256c0d2870b460f7568fe15a92617ec0c090f56ab70a20bc2d7964e6ecdd618b5ee91981ae3c7b99f00c6debcfd232da9de59bca98b5d395cd6ecde7fcd3b4c4b4bc4ea12b79e676c0a02d38dd04fe1014abc735cada9b7611f0bccf4fe66ecf87215f764c6aa335d973420c4e8edcd7c6c43861a66603cc5cfb8731ce5ded2a9e818662c07504889d1abac8b8d081fab4fa67ae8c1f4bff6de31a6787c17293af5e568f0be657e0585338bf57f6698036486ac9e7048ba990c30070d3ef2fcab6e8d3a3e1d080a1b450dde8c14ab3e70a699d124c80e122d34a61bb64fba03b1a1b68f6546c4b1d1d5fa321ccdb177b1c28389e4311893903bc19d66024ceba6ab4f12b119f979e72dc21f2b353168ae5e4d9a2202da15f3b995f04430578b13ccae7d2b3b4c3396bd105726621235d2bacd9f0272aeec58aa67cdb2bfd35bd443a339390c2a516d842fc020fe970dcb9a66a623b0221c19bad53d3492d43a2e7362f00862f7fbfb04af88b2d4256ccd0c236a1db1eb4cde65147f4b891de88ed822d38380d3615cd0f3c1d8c0f41d28c3ef9fd3978624328cc0a07641baf8e29cb8aef1989907666c67b01dafc9354bf8c256acef8a0b038d3f0e99bfdf51e1fd631de84117193a43f7226c867e5262c5c6aa748aec2fe70e19a0fce3cadf6b6bcde90615c8e7a73004248b2f4f5d1dd38e2ae27e77f56472aea730ed138ad3cd8d53ead21379c99fbcfd1a6b3c9d6178d12f695bf07eaa19d2c31dd48aae77536bb303b69e670142006cd02f68f66b456807dc261156da6b96f92b2738f7d9c04f737ef5efc98886718b35fb4cb3a907483084fef9a45437fb147181c4604276f30ff5a1c90703d3a6ebd80fcc2f7162bc3627ebee49f53d252b4588f90d11f8c4a11e675457dbc9cdd5817f0ed9002426fd0de0569de75123f7bc984627ec10b6871a549b592c18ac7782946ef674f8445b64bcf8d893f1a4585bf34c2e7a339331f2d2fe0f6482856b0b5ef3a0ebe036a2a5115f91d2b73a938fa6bcf617516780827efc88a5887ec8c63df49f955053430f42b06d1e33e385397b4ee36940d288a08582d4b1a259d986ff34a3705f0bd8d72fc30423ae6f4b72941ad80ab174ba27c5a98f1b4a37d95452c21c904f0ccac024c6561f1801c4fbb19ec78fe55202f7b973a7cfd653fe8a937899509d47a9c373e93d1eccd49e3eba9685b9004541133208d0a57da3b5ccdc74db9602cc840d9a94d58ae8ef6f105bd7ed1534e639ca14b5378e819da2ba5ee3c2e6cb59363eef72a981c8bd1b23a0b8cdd0166a89d9379f4ba7daf0a99fbf5407e0a9d815f53b371d31bc795d9c8a09b06978b1eecd8e5160bdcf0b5af6fdd8ed86a16c1bab23f353505b10d26a6712504b5b1d194226dd31fa1888d15bb0ab3478fb5b10ee66fd21d3fc20a057d6174cb5c2ab3cefd474a409f4d2e9f25880c753d796ca95899c6d7cc1a3af480a30a1f0055c94b311fd8fc0be3c5d70a1175b2f3432d02be14d43fcaf6f82bb3b154848b03cf85de4db214850a692d0f165b03717f3cb2374692ced827b8526e3911858067d04ca294c29187380c73d0964418d14fe4b57e17dba9ed38c8ada9ebd301fd57a7c5b73546015b626a423b23037b540ce935785aa4b104b0e959de1f3bf8d551cccb459fb72af086e4d82db2cbabd5a7aeb502c66a51e0c02994b476939afa2f5456a484be834226e01d443528595fa81f2ac2746dac53b7117e9c143f4724c8f4233056f94b10e0952bf94e0eff68451dd4fb58e92fc65ab754df1e22ecb180eb6f8dc11083bc2ba0f9d65d062a424ccf166e9a2997812858cf3722cc530831455f64c24c6f12ce33d9587bc50ece3a51e165c1be47e41d463c87bd46060213ba81e851356678485d022c87b01d61eef09cddde7a5955d279e1e5ed5b549261aed5161e7e5bb398962d25b3061f57c0b02bd916ece6f247655ddeee56142334a2babf7dd1ad52cc635a76ce593518dc38096352b17d055356ffe127913c32635e592102b104af2fb40296cdda2165a625999e37fe7bd6fd6605b2ab7842c54ce2382f4d9bc65cbf58f1058a3928b5e45b3b0c5eb9a363fd0c2809018315e447abf0d6858aec140bad589101064cb9a28b696f55aa6270ccc8cc5792307032339b68c16e1c9138051d399dfbbae1e04d46d4af8519061242292b4e89917ece96e4f2644fcfd5c51520b484587cea23e936364c425a264f1d0f15a816477ae9bf55d7a24837fa0a486a343b1d564b45a82425685aaf5cd054283b24d63771d07b3ce963dd86b784176e5abfcd3b183fee24f123e6b17ec270d283c333028125e295a766510056b22a40dbf3fdcdf3b5dacb21af76ea79de94030a9ac4ce28196b7d72d0cf5ae91d59bf8b292f98af0b34bc9cc493993d65c563f38773b8adcd9e246ccce491bae9e2ed4221513b2f1501fe1f56b86868a2a4fd335fe03b5ac2714bcc57c91140f84c8c876c4277ce6f7bd3931478a69ccfb16edd51d3a3ca676b44dcf863798b71282dd533c3ed442d92a46054eb438e89449a2fab88db5adb071198e27cb55555d6f68d2409828a98887d9e4914d15ae8827b8c0912633c591aeecc61d0aacd1393d6cd03363d7db34c16e4c6ff1a6640434be8af4b60301a7b682dad57b6169c57ab4b7e0212062f64810bb099376283b311633c70b2fb086c83efdb1d0d257feb4537d0aad6b38a15871ece01abeba67c6a7c305fbd1b8595bb03035c2ec6ac93344cec0491475f7d8a7a1795ff2d939f87f91977587f24e2f6c9100b8b2303ee9d74379708a2182b43209624098224cf468c3e601a9770ccb2386a426b3a46b770e487f6703c9ec6c5ceff9bbbd925b9a2d2976d6cbe0528a9f9034a4e67e9a9577ded52a02f37cf511588de3fb1826169bd21b9840fd056978c7058537a6c00cd6d8d62227782b90420db3aff7c42b3d8e2678503f464818fba55baf2f8ad864934fcfa92d54c4dd527bfceb26149280286e6dc3f003471a5909b52aed83d88248d921a477ca6b5f3e06e014bd5d6d3c1f8095e04be36d398fe0a4678525c992022d1d501e4150af7aacb0614a421f3d96ad23b8c67a7fe175cedea2101fb1e15b0a5daa5bfda09297cc03c0f5e1ee230ac95aeacffebfde5abcc97f7829febf152e0182d060afda66b0933d045601d25c15be4f9604ba2e8c521d9a4e40c01b73552fded1acfef47fefa6ac88b16c805a1cfd6cb9cc3b4b8e32cab8d9764f4079a622ffc75fa5b9578713a3fd52b4dd4a15a50d0db8cc642edff84ceb62ab9f0146e502477220589aed47445db626a55cfea5427b6bcd3b3ba67d4083bf1fcaed38d3ad85229df25575bd135fae41b2b3f707be25627c9a964ecf8b24961ab62204b3a6ecf286d2dd49c0ae0963a9dbe4886c410394663a02b8535317c5e5a17ea6a3cb00ff13e44ab2474046c596eb3249e74e46b3f74b855951587b93b04eba2003d2aef0dd597f293f2b513dd4dfea10fc6fa33d91cad3f624124407f9b65453f677e3a4b2d3e95a3df3a20b815f54470ba99ddd30666dde9f0a87cccc126b55411de14f4208183498033de942022763596c946166fc10fc71a51da1707103af80f61db44f80ab8c6aac7049b2c7ea36b1f9bfebd74182c3f377dfac9c538d08dcb1db8968963cd9e25f83bd555b54a5941ec32997d0a87c44c8c9f2777fbc2e26ad9b4be62995fc7a950317fc2b54cac5db46db1f791cf6f1bccf8e56b9ace3dae5cf144fd3031799c80cb62dbf3c351d4826062cec7697fafb57f54d8d5108c6ac33a83d98784e641af9c4b878b5eb6acd85b51818dc749b5206ba857d191cf0fca939cebd48f61d0569e9756c824f386e985710396966cc1bebe9c1b60ab2f2051118dd2e28a671e627bf7a5f2ad410430df93ef0ea27e668155e2658b3913f394600dd08957733f11aeaf0e8e6f6e5eedef259f3d28590ff57a5e7adbb792aed68729d1bb4d7648ec14684c742b2ea03d0fd1072807812af3cef40a8314202c26261344facb4d0042a8a5eb35ca210c4470ce48b263f8faaa18bbf31d6ec59101eea71a369b04b8e1831a1341a5245dcd9bb1e532dd0acb1fff1a038618519104cd2c877629daede5b6676bec6e9b6ba9fad073337c52b6ce7e0f3a6cc1bff93f60a866f5708c677ed734713fb3ec8eaeae34ab2bf50f3a5f8070cefe6cabe37f24316d50105ba11ae2283dfaa16823a89c33b06a8066795677d254e946bb3430d3f14ba9afbf8cd891ec60c267d437c202aa79575e2f04e44aaf22aed77784726da627f1910ae9419c719024ab2c4719cdfde5cc07386be7a8a2f5b9cd35c66085038ac8d5a96c1438fa65a8f4e475a723b67d1262284cdd49911a04c71f6113be238849c4b5c2e762d4030bb69b8b3dc20376c4c0d7face12138dd0703bf0a6ffd398e0d35fef71462286f07e2cbe63d8aaf31b9768f9404d9c2137cbda4b68625bb8969e3c67064324d4d09ac23e16e069b6765add7a7b34cca354de9b3a937bd4017bd1243b9643edf41adde16bad1fb3b282910188e212ad8d59bd1f2382336e2bdf4b0d8e7e139abbefc9981a56cacc41b8115947cb5c7671ee557fd2fa664388d966b90df8328e81e1f802f8e967e364aedda26785537c1d49b9e1dde893f466ff52dbbd7f8f86dbde48809859c07591fb249f02d9976bb0f492054626a801d9d68f17b6048c82a5762277fa317d46ee378d8bfe3e5f6b102bb815c3dd89c3f55e1928c06a056466937dc34c1cae0486383d5fe32be203dd003e386bf2141ddd5968caef33159e96111739def48e1d0f0806424b7cf88244b7513c36e864fea34a8582ad8fe781f51c8a2ad9eefab5fb9ba2c352595ece502d327d446f9e23caee8745f94c4c4c6495f78321a54fca7249212e316a145d9d4a8c57dea93de70f1954d7d94de9a3e4f7234d317faa30d92d73cafeb8f204dda10ea53163aced6457775e77ad0d068e3b2d1048ac15c785fb028e34cb45f8d55d503a33ebb25385f996116046b4e079aedaef946574580abcb1881630c098a06c7ff989bc86e174f6e924d9523ec8da451e9da36204d77439345a651e6eeabebb8df0b02bd03910a8b87aa838e3f62b3b8cf40938496c752e2f7be1ad8c5f9976a32e4ed5e662c393265ff33e4e37fa77cfd9b56303e30563f0d6bb40e91d9a3d30cea1776eb66dd072f491eae1d8ba1a495678f6ce77bc94d35789027f06ebf8ae8dbc943c48ac207b074121ff5fb11cf1dbabb0eb4e8f0c1f4b11b1e3befd81b2aea5c786365f4e51c9a11293cae4ae5997db959ed13c4ada02b1a0801476a7c35ac0a521d045bc88936841ae8fa40fdc96e2bead1b6fd6b29a92fb5a4df04c578a3303cfe432c821d9ac342110a80186e090633830a2757ed8d658bc2adbaec2a729f9b8fff5791481cd6ee3d42598a79eec6d7a692319ee787382ab362426795d566212bae22304025571312b84f128ed7c4b5909d5a49896d303cafb16959f1f88e0dae4166463ca18b95db9bea098cbe09fe36452d92f6bd7ee98c6d8fa8dcaedcac014d5d6c2f03f9f87ab6ba853d518c3c6bb8ecd59b1573c879273b256adc2d6f26f7925d670ffb16e1d5ee191a8b3ea4fecc764cc28fa828ff5528708222748544b540161fbd1615bd113a0ce27cb66a738d1a76449cb06d6f0cceb240a910c8b2197bd7a0135fa442f62b4ae3532a0c5814fc22b962e857ecdfef2a5da64bd0a094582d3496dc7759eebe19551e851dd7b0373065af88207cc88f62ad7540aae06ad4082023281b08b4a8a4aa7abfd7d4146bb6acc54b5ac30ce072bd76fc6ce17d68fdeb4cb96952172f952cca50df91db94bdbaec26f2332410f318f10032ba7ffcee4922d70e97db3677cb499791041f8fe231843bb8a2d11f6e12fea00d0d820aba496e5c7a6074cc82795bcbf816e6c876d47fce68e677d0305c3fc0f7995fdd0ca8e08a28f8e65b0af002fb3e42b7bc76317bc352f35ef0d079c31817fe3d3b0a38127017a66cc7e30c03c93eb1ec35bdd4d9ed3f5b953876af38a5106fa30b4c0367e12170a440fac3cefb999e5b6d1bdac768fa3531572466b282755288e02179bbde5da05df00eabd57a6f008bdebd2dc7be787b38061d30f8a0cc590af10ef3b5e751801ac900adb4228f08eea5594c4d7ac53c2352b70200fa194ed61ac7e06a6d330b1b58e9488fc88f0c196a3e1fd27150533a98a6b1eb0029252fa108d0abbe0472224dec84a328562d9eb979768f5e9cb772525504925d9ab8a180b6442b9be74dbed178e287bdc6eb7fbb39a2108a1ae9d61d5902fc90569acb08e7a9fa4b72d04cb3f443444ffbc3798312bab09d204eba65bd18e40b275e52f155be4da5ba637249b135690f650907a708a913838f3f305f5d94dcfbb8a3d21b1417526d656b4f02a20206d2cdd21815f0ad047c9751ffda9edccff5d65a7f07ddae70c3998ff00bf044daf50e5c688ca49ac43f01edb513879739209db5893d0675853d165d6d1d105c382fbb1258be2111c3b42e5510914b876f0069ecd1631ba7dd858f02ecc4b780734f56ea02ef546ecaf1441edbed128b0df0ac9208f4b699015fb828d0913e4a23749d2610f29ddc33becc8d3bd5e10747b82e4fa0e3a1f7508b0c929472b3b9fb176091033fdfea49adc75b2178224c43e14e3cbbb77f7042efa8135c7e4413340f22ecc52f3da3bca511d85daeec5e03ccf623816f20bdc31e745e5eebd2073d04ab133853b3401d48b085289520ebb6a8ea0d49c4458c52f304f78ce2b592b0c5ae32b0383910a0549b5268a5ce1e040887c5ea2ba711d41bf87990f100f1ebce6696162a618b122ea90514cc86afc9d53f2e32abbac708242aabdcd6fd65c96f3d73b95a83e6cf68bc207ca4d1c9432df94c5324674e496f318e1fb0a0cae39470000e49ae841eabb42d074d986747ec2d50e3b5247890c009ab0b71ad0f8d5f35ac1b69cae8c6d515dc819e8c23f841a631c28d779080277c84222f1ac5e8b91be09215d4af97f42df31cafae1f2a33d013cd3ee03ccae860c14602b185b37c7c6179146564ac94165322dac10705661c19493b160d94189c9db4dd285be14eea45b5e2c87ad253245d14c25badfd1e8be9fd6e7abfe67d562c514792379db41c358b475f40f8003772c8c0fe1e6f2712c9b2d0791543d6dcc41b81b5d2833166a545840c4a1222f6e7dd40849f8f9237e3049261944908e09566bcb8aa48826496623a6f05991adfeb697a924d742ff9a21729b4a9242e397bc686f3315acfa68e336014ec163f76cff34d5a7acc574ebc79f9a20b2774797b34928619e39c40f208f475cfa569f35ff2b7f88e25fbbb3787a068688994fb46924cd94d040290b7b3b6d92248171d11ada6d7939031516a7c83bab74ac898afb74cd7ec4bfa99508123ad8f1ddff6b5fff60ab339fbe240ec22be8a903ea2381cf744e9d49ebcb70748f826073361b104e9eacb91144aa4401ce4acaa05d159f0479dc19e6bf3957c43efd835367005195e9f7d0b76cd64b7363008bd9ec866f28162f72017f5d0db67fdc9be1540ca7439a973479ca15552a7f469fb04ae202cec88b92c5a8bc7e7dfd57f9ff12dd2024111ec9e1b7efb3272398c02d7231ab669a7313cd57f5641301cecb651e0e5882fab34b021430f234545cf300085e96c1aa6e94ac5e88043941ab83d417a810a01283108e04241919a5e7cb2b60550868b9d0ded82ccd475ae01f67355413827575140573884b17cdedcc32a069872ac460573f18cf9f04be47810445328040cdc44a2f67c8398ef3ec33c7ae27131bf1ad20eb381f2f2cb26998ce8348a90c208db018c14d597a8824a1b35b5eb40a06ee6178d40bd84b4c7839f9a343ade852a39c616d9bed323a59cafde6e3a8029e1cd5b9f5b4609a754b70500bdc095b2006b14b2363e8e481cb0a0e72f245b7459c9baf508d6447b8d21c89c0438788cdd17c742e61b3d81102b41dbe61a9529e303b06b78fd963e21a85de3b8816e9a02f08fc3a9cefaae5986c61d678211f878846491d4c16961eebcfef60b777a506f177983efb40baa7ec58d8c3c05197b08fee87ffc30ae3b79734abfaec1f731951b890beee1cd6647107bd434a6943499d93d59ef28d37356d25d133ad888c06d6a8d6ec4aca35869b6b2ebb7994e362d424b334b3a07fea876202dfa2248cf1a4d483bb917f1271178336c2f5c8398615a776155d497fcbceed29c5bc0b6609942a7aa03b6da8b89c13fed47e0acc1d53b36ac2e21ef96895560e106578c1100b83d561f850ca0cc81fa6558f03f84a3c3f64027633346c3076186bd63accdb94605eea25a257706df20e606b660a8bc97cf12cb26ea1ed83ecdc4f542464961dcd04750375419e8667b190346bd368d2a8a862037932c8805d8435a6cefc2bcd9842bd798a4bb6950563346f3827717dec9ec125dbda9ccd97c30ca2ee112853b1cfaafb9dac4b884c203def69c594186c03f6b2c9b2a088cdc539baf42edf419528c0e71ad7ddaa75073d1b745e0f32622c120e8e0e9018b6438937f684f9a55c4bc917f22e30271ec5cbf76b6d968f78ff74bd6b2c9de4276f3ef56995ea45a08a5ee4b338472f488fb69520436260afad20d0689081c8bdc851adf005fe436c1bf53c926363d30e0bf081d1c7da0ed4c2309dcce838ddb6b3463330fa57d91e801e4cadc2e4ea10f29574192db24ad0b53f73facb635f7b1037bee0b00df8c8ad8d7f6de95f8ee6bdbbad7c8cff2b6f162084e8bdf2d348de10fb9dc29567ffaa51fd446df570f792fc5f62f59bc15646328dbaf4e0263bb78211392d7ed78451d6c85e787f828b5b4f9984c02375dbfc456ad656cfba20a252374b25b3a2d316a390e30f2cce65f19de7a35d87920d2b110aea75f3bd9857eb97b1d9ba610ff7c866ecbf819fe37fb7557cd6f88650523f59e3ab36df5613f05b481df8c19d25f3874f099fea8476458fbd576a1710568a2360d6d1e8c152d37074e55b55ea39696d11744d6b0012ff224b007ddc1d6a233d500bf1831feb6f606b3e08a1de0af108c8ee7fd2a283670169cb59a26e57c2a0d33eef09a21e69751d06741999082e94696fe6c0b0660a49b2661721ec907c923ca2505654d3cf51b198ef9757f0a87262eca1a377e33d29a03744720fc73e0054fe761f6e12ac6f902dfe4d889072e82265e8df6f74551d4cec637c78820cb616b143f826a6747ade0d26c8c572cd4c1215b487117e80f30b89085ec15ff161e9ec73f5d847284620552f5fee7315cd791a82ca13fcd95828ac64721a3310a800414d423b0c1b5b52bce94dc766e9f50b51b8d79153f4c610de3df51c2f9e1c7fb6b2ff126b3e1e0751e62ce7790974e362699ba18f71e46a39a2cab430afd94e2b130c5f291eb4ea2724ba87cb76ba0550ee07e7b8cec90db810575c9fa09a8f43db47b75e28e0928aeb9ac3863612901ee8a9c4c9180ac80973db1c16fd5a032a7e7384300120fb79c6e2d53e0e52abee4623c3c7c26422cfe527c4f3abc0cd3be71075903e29a04bb4f3bc87fd22b5503c7988741bf392943043907f72cbc21bc91df7527821778fd651ce901f00c42009553eb94a1fed24a2da8bf81d74149d158679f50e6260c5e3ebfda559c1d0e54332e39539ff963a4274b18e1f4a6979fd8f42214bb0b1b1083a1f3c08f5dec09461a80d972de757ee452250c76c20997a47d6dc2abae2524e9049ac1557e118daebde351d46ff2ffe79632ec731109c16000bfe03f26ec08911ee52a78ff29b92bdef75d0c0b18b3b4333420690c8e32076375a1a1b0b6b2a06f2c5bb5c3159bcedec003165e6304baef8e4b7e62978f09f5984bbdb867d2c7bac82660e73083f2cf35fcb66777422773c0a11700fc3363c327dfd2c831c413a836b763923d94e9a47f45183d2d33d1daf3648728eb253ad5a14dc2e864e44210261f7fc25b1520f9e7d0d434e1c2e95d36da8e3146dac8baef2e3252ffc5878de176d911e1291b1145ae06ac68115e822426a0942a153b7e2d52f863c32849409c57a617b049f102851d895cd55c120c015bd672a89d6fdad071f66aff32e6cff220dba18cd29bca9b4dd0156c005d0d5e05d49585d63dae966bea938abe482265395a32823ec9d33377d6ded83ec2c47c5592999e3e13c25882f95f911299c9aa57ed04b850f4f6dc1280b1e616abd9825ac69cac18a3badb4da5cf81e3a6c85f1580b5467cf559bac80aca37f147d512439d7b3a709213c3afc3b3ecb7956f29e3d12fac3147235e5123d48e182286fd03cc5290458a301ba02d700ee40dbf97e5621f4651ed2af6eb9c2bc11e0fbf0e98fcf17ade1880243ca6b2682f2f9ee5a49f50a8bee7a730b9684d47efa9c9ed4a61081edf7a245275a093963638874ef16f00b6af7f8f1989df9778f5c0f70ee49d6610c0ddb2edf7be0b9cf3845edc8d4c72a650e02fe28b5658bc332bbe9e55ef8ef4d59789f724e33302458f0f0664e347debeb22718e025502a22179a6a39cd1fdafc2407ddc89eb6e28d96f88f6891979b36f229018ba34b096486a0d1abd92f1289ec5500fcd83c31a3992c9d2f6678c38123a31e0abb24933d63963d2fcb529d712fcabfeb277bf712fa01de5925dfe255c8b084e3aecae98cc5b567575d99a073ba813609b0b2f8df914e595a4bcda2f03605795a23035475d19dd0d1386794324761a0265071ae61c88952b799905d94e7f7f56ca1209e26466caaeede98c7f606f6b8ec8cdd2e7992c7465f716c82a041210e196f86ae69c60524c40d72cd29cec875f8926c4813c0bb9b2c00bcfe99080e9e2095f587e7d265fcee0b5d54ba2da3c10e23e9744acdff5833d04af09282154d54058c4dd8f3656123077853f9355055f61359ec3f5bf47704f9c6944be9ce0581563761235a2c0e8585972f05b9cdec9463ac86edeea6c27b9737bfa728aa7f3b691a3c8d0f73a9f947f258413ce46c300af2edbbaaf7ae2d63209302022b8e0f7140851e0c70ec938519566a05150fbe863d4f22512d78b64a38618f2d83bb80490ffa351836055cd6e5cb98c507329e14a7153ddc129aaa942bc299cc3b45f013b5d1577a66be2d0cd03dff69d69bdd8ca94431f34ac96392c368c7d5fd4a6c8ac2d9f7fa12c2667ac48bc0d1e1fffb2e5553c5d952706ed73888dfa846b5079e2257a8328e22f47dee5067bc472311a233a1ee90266280e43b1d8289ebdb5e271658d78204a0f26d8136ce73990a4bbfee8293505a88003ee6a224a04ecd071483ce54c7689533b0e64c85e930bfcb8d54ea193add461d53fc18632582f40a0efc4b20d16e0cf593e6a454b044d1afe23c7bc4d03fdb7a60a8717009ecbf5bdada89b309d3e76f46ed9d2be11b6529ece6e55c0afd287c6bf7151d9569ce6a5bb19d9b42282e7f73913fe7d99c5e3021c4ac2cfd4e125d26bed4426ebf678c3adb127bebac943e5656c8e4ba6fb6afd4e46d93ae88f3b6df2894c332530d8f695a80c981e43a257d72adbe49533ea2528e3bd3b26f1348365bbe3a363a6135db6a36c086e98f20ccc697a3321715591990471f911aee8dcf75c01dd4c283f2f950eed25e32f5d2fd849799db64c2467958cc55dd7ae044f30e4173d8a6f3342bbdd049a4ebe79ed17155cb75b47e782ab719bbc1b07ae8e13503fa810518a8555fe48fcde3a8a5ecc17f64382013965a0f775df536e75197f52ca9f1d258ad3395c0e8d91d86fd4e2abb0373e308e543f70c50e2c421f03280e17a1c4aefc4216d17bbf1258a51998ce0ba90233c3db521d0e015530895cbbc41c56b88947b0d2abb15182df7be6edbb1654d560a8535179bfe39ac36da139caedd2fbc6499852cadea4344bc9f97962a87275fd8b64033c43c5ea0133ed327c96b3ac35909cbc5d1ad5a708a875e9e995d0893f69119958febcfa19aa7ca31c4764a5eeae75bd7d0fa88c1a7ab27a45b738bae9ffdc0383277cbfae69b3ecee744e5d28c7da5ff32431a693a283ca658b01721b198b36ee9495a2c1ea8cd358c801838ec2823e1fbcd6ce5ff7f4a234be32bbe397085098be0df4eb896545e936c6135daa4f596a58c2db35065673c8f2ee8dfece1ccf3be9d5caf30b1261bf32fc4341135fec18544336d544206a9271b318f8ddebd80b8c95af2fca74bda9e5e680ad36b7fc6fbb3fc2af573259d60bc905281363c4ac8c245367ee8bdf219d3db9cf4976238e2edbe36ea9d1516997a0bdf7dc90fd4740abeaa9de4d5320ffabff07057e1f89f96e74f24ec55c386f46cedc756535ad1be7954336bc5f25934e235743e4fc66a21b28cfadcf9263400c0fa65ae5824bd05c63c2ce54c348c8c668b2c8ba9af9db78ecba7254b92c3d83a3d2c0e343573f5be2da5b48e7cfb81b2ec8b381eca5dd4b1e2dbb4d33e6e8baffe9ad3600884f28fd8b3bd277ae68fdf45a1cf66b870c8f4f6b56f7bd1d585c6bbb14ef395a38cc4ff33b295ed4298de107e96b871907f3cd0f6d0f518fe00b5491c0e19df96e3b89d1d0ebf82f6fae6e311aeff76c2da14f0cea157cca88cf962f39ddb6a8ddbac0b571ecee73f6c13fa468f647b580d84a7a77298938d09b6f6fcc2d91a4b6f854b81c01b08eab8c41e7ec822e4355fdd5c272d8f148f8daabb6f9a995b2079afef248b8c606142aa0035a1a74b6358f8be067849347991d55922bc3ed2b59b1f05bc6864ec7c5ca8dfd4252cdfaa35091726d91f8c6abe3f48468c7e4f29d7de64c3411a56cddcd32026109873bdaea25a2ca54db1791b520b52a2cf68d75b5c5c1750ecb0eb4668b7805e2627ddf5f3d1c0cb6ce03ad7f8d3aa836b4219f4b2e358abe837d541315757c612cd83786cf88a0130564a1af35d4026d7d8b9daacb30c29cd0237c64fba34461cbae30941f4b9832ac4f8680543620e2cda8853b55cdcb17394ec45e9acefcfed9bdb114056b7e6fdf73a75cc80d54bb9e70a6bc3b0472be20fd811dc56ea93b548385f01544e3076df3431324c93ba7d4a1e8535c378a3e68f310927af05669cac6455111045f54c0ce4e474899324f21738ccac54b19d77650ee278105c1d754b306701c0361793bb96c91eadc74e577f2f7fef65c05e677639c223705e7aec0e55b345cac003abc187413c61cbdfd422c8dc01b3b604b75a3d0ff8d72e1c07108105a0fe5af8ceb72daf5e674ac35edb2e665bd6b23023e892e5552b4c097129592e90a8be2763388273634745f4164c4e44a1b61633a620ed1a557b8101d15c379572bcdc4589b7f1c276c8031159b56fa8921ae7c32fbe1504c9d9ae2fc3a5370b7d6487e3aa2df555153f061853b78bcda95b1aff56e649e8f45297eb7d9a817ebb231192533d39208266a901f618e51a7f746e0b7d8cef480c166f80e48dc3953771213fad6233bb624bf91b33b20c2bc34a2f4dcb7c3ecb3ad2b64f4fe81885ca24fba90d6087374eaaa7bdf184d950e0bfbfcb4a18a71c7c000d79551b2e0ab37ac45417010f33796657480f7dc908a63c094851436002b36b911b04f0d55c2d1468aefeb1f88a53b7cfc334564330ad5d1d7517c98e716484d1b1098d8608f07f4f001f6b6b21191243b119e446f3c42dc39c281176d0b4257596e31e671e2d182abe999fd070598b540204e8e2482d02b01dd5992b1cd6c1ea2380e407338988c9acc7e046417e4052dab175578cbec0f9a34819648e356abc1e167b9578b4a3542372000ce733f0b3ce00f42c3654522420be0febebd86ce03f91573a50dda7ae1cdafe367b7ac8abbcb760cedfacf8df18e1f7bd21cf73821fb651f544623fc1981cd02e6ea33ce0c540d6b5f18e2303a0ab6e1dd0d888c6e1a77bab14191bfb3030cb965126f043f3053324372490dbca994c56406ce1eaeb1c4ad8d4d28c927e422b556e6f77ac64528adfad5bd7077a77c5c1142d39966f05615c90380c9e5bf098545f2a4f158483507e81599f3efb9c61c26852292b74d9b93f604f811206a54880d3ceee57cbd1392f3907e063ba9b4117e543c5f93acb278c8813b7ab52354dae4c353472a34272c185a4b3e34ba269c497b870a00831d3f48de554e2eb517932849053b1b31c5ab60b53e69455c5888bcedee0ccbb00db6c39ee00cbbd5b74e2c258a0b190e3d8a41e9c1df159a65b1f9a5498b273f977609784ee6968ff2499b5a16ad9f8afe51a1623c7911a7f5680f0d07e60a17b4739fbe21fd3097f9daa818ad402474fbf853bcea2a7dd89d644fb66c9d40afc38ae91a8145c545f24b4f94391b448461b283dedba26be32d27b72c8d33fbdd0e6c31b910c035271f7656421f9b3f52c20d587e85dbbe72a7d62c38bbddb037521586d218aaf0daf918b7d336352e2aa464281f29ee29fc73fee6f3e4da4cadf398c9b9af7a18b35def7ea18dedcc55a658d1d5a1b0bfd76f3de59112c54fa80669199da7093bfdb43aca2bdfe5f93ed98f0d99e748154cf49b9504610c1d2579f26ca93977141f5fc97145ffd33da53cd7b4f6fa58c286996b2906634db4e86682d95699dc40bb76838bc24da7c756925e82269d0f01fad9f02b141f79fff09db81075161e7450faceafb3e72d3d5149133bef0fe39a60fb6ecb6c68c29be4d077480c23fad8754502546c5d374565669ca98a278254d765724a3bf121ab9232e2f2484264f519e42146cbb19b3fde2059eaafa79614ed24bf947afd88e9ec619800380e28aa66b239bae2bad10b173a34945c959fbc88fed609d35f9cde0f24e97e9af17f3f9900e6117961654b305f60455b17f1508b1a42bf9f08a9406a899037e64dabcd77f9db754263af01fcb5f0d6058e675ad344b4f7a9c6547e4c42e1d51ab13fe87eecff97ed89f66aabe110fcc85cce5a2d92e36f3008cc0575f792ba5d0c276d1c9b1b2d659f544893dbcfc7dea33c5502f2b11cd2bddef5ff1a2cb9b8ce0e1ae1490e0021df6df2f207c87df614fa72b3cf02428c1cfd80f5c259f5b5bef8386610db60f913f0eb61900dcae0f406aa094649a010a3b4337351d9c424297a45b2b45cb93b50b4111e00c7325442bc5fd570521dd4037dd07807dfa22a35248e97b1f69d2999d3103886cbc84d52e4fe72aa5109e22be061ad6b9ff2fbef7db9bf4e6afca1084ab4cd6bebf16c5b9f3a92e71b8e3db7abdd8d640ce641feb20cc0f65151b6e1edc46bef5bb58f072040abc9b9699e714a24d277e22bfac1a231ca776fd1e7103c913101961bac038155eb4bcae6979313e6c14a50d65b31460d972380c533e383e774c3841c0a2e82cba63a0b73e8378c437e4da02ac309ecb74b416fc0d31e7964485d977fe41295536c88a7957aaf24fbf77444ad1e287fcc187ecb0b36d6f1872b9427b34b4202c8443057ac302cd242245879b3882bfc19c445a4ed905d7583af9e913d90148df51d7e193e589efb3fee04b69163d56c31fd81f3b09a181b2a33b58835c698dcd8dd58915e3e1feeb81eddacaf2b9e59b254031373a3e3eaa2c08a6dc6ea186f3f55c4c5caea7c8e44cfa940d0f76e46604b57cdd27f7c5bd74de80bcc5b1ad7ed1a26d24b9f2698d27d7f683e4fb7df830bde9cef6c66cb822cbd16cb90745adf617c87af81e1e30b3ef70ea6a8d6379a8995703a1b174d2ce088672e03d9aefa1c14799bf48d73b9ba30ca6eaa2b32f1b91fcf826d3fdf2ec3de34947b0608609b1e2f974a7b966343edf4b061dd01fd6e280ea7bfff435891b777b7fbda15c757bf25d6331a0013115816cd99b3edcb341f5dc40a0c4d4106204d0f9621a6a8bcb0b0065514e40269e092b22edaf2541f7bb815b6d1b71b805205129d2ccf53d56b5c542fbdbab6e751ad49257d528da78c4711ae381a68a63c686a657566addd44c1fa710c3504f29508a280517dfc76acb92bb07bfcbab5c8c5172d9fa8a61b7fa8ff9a0c656f3d8e000614484617c5ae0348e58cab088f4567593f027cc0d75d5c41bb05461384340fef0f2bb61393fb0029814c491153f8fd331bb2656285a89a05664c269cd2c1e94607765bad1711111559f5f3ba36e3d5c1d48f14e097a5b7b1d977373e8a7c1c2e49a43b957a123973a34d9876bf88cabbc7132c0530cebe367f565c060f9cb5faefc442ce03b8c4b989593051dd96e283b6b2ad8b93a66c5faff72184a609cad9635e0c4a40c93c08727df7ea5d50fbe07b507466ad7c193ddf33011b679d46d516bdf1b9492a0de5fb37c290453e7a915eb50831184007b68c6f1190a2463dae9740315b3db5e9a9dafa1c77c099be4a8de924b649a40f40c61b8dfb7c316601ed99d41224c1857d899ca58ffc3d11484b769e0a5d04b47e09db80e373f84aa82ebe73f842ed0ae431878b1a24ab905e48d6cf15672a81d8fc84d874d6516a6f5bc97fd92f844cd1e5e36df9c5f28af9e390d6492dbb65b220d3447ee824228e4915d0b2f8bd2a1df6e4758b4c8102bb48b2b74b9278de8b6edab09c8c31e171bd6547ba89653441ae431ad64cad7d0746f033607f6d4561955986eb3cac84a053ac7e6b162c216e88cd94357938d84c772ed4ad42b3a696b040df637b9a42634a39d89a1e039a7ddf5a638c36d5b79d2d583cb92432fe54a39df5a7aace91ab9502502914a7bb315c97d0ae1c95166ee5066149692fbd98290d1bd8d35a355717d50b100470baf5fb2e6f8166a6b9b52d9a1af479184e1146f4ed30666465d3af105d2f978703359e6dedc3a9c0560587414de018a82a3dcd07442fd17971143449cafbf4acc395bf4cb8f193221205edc83d0192fd10b04eebeda4367352fd5ace1dfcd994c512ca4dbab12d9f333475fd2a6b5b2df587f4faeb54a5ed2637813c3dffa622f6deaa1a32fc9ad7b33879931c75329c38dae16ed29b73e535364e26eb23df7c853a1c942543182dd74e4bb76d5b31f7651f39a8f000854f9dd19c3c582850b86b04d0a6f7df55cb38642e74111030e5412bcb5022ee87d790e5cabfe15e5e9d6f3f0c761cd6e30ec9a27a6a02fef9fb8e169e389ea58cfdbc64de4924cab9b87d6efa4501a310773381161e6024dd9f8d02e7a922fcd897e45d15017403b60ed</script>
</div>
<script src="/lib/blog-encrypt.js"></script><link href="/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
      <tags>
        <tag>Science</tag>
      </tags>
  </entry>
  <entry>
    <title>交通流理论笔记Lecture2</title>
    <url>/2020/06/30/%E4%BA%A4%E9%80%9A%E6%B5%81%E7%90%86%E8%AE%BA%E7%AC%94%E8%AE%B0Lecture2/</url>
    <content><![CDATA[<div id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">
  <div class="hbe-input-container">
  <input type="password" id="hbePass" placeholder="" />
    <label for="hbePass">You can contact me for a password'</label>
    <div class="bottom-line"></div>
  </div>
  <script id="hbeData" type="hbeData" data-hmacdigest="e35bc82c0a3f58ae83ea9ad21422294af28dc1825e390af8c7520336c6528f7c">3e083b4887c2f0d4d45fff13f7a36f0bf9edc8cc90e881c86b21c5c52986ba3102e7d985b95adee4c192309453cf9ef278c0dea61987799682fcd2d313bd0bbeffdca084ecb2f9f792d6291a04333ece982eee10602419ea66f1eb98cb3b6975c2250509d74d3808fc92a4402b7039b2390d03bae4dd394070821f7315889d07b660c579fb24506686fb5ef2bf7eeae6</script>
</div>
<script src="/lib/blog-encrypt.js"></script><link href="/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
      <tags>
        <tag>Science</tag>
      </tags>
  </entry>
  <entry>
    <title>微分方程数值方法讲座</title>
    <url>/2020/06/24/%E5%BE%AE%E5%88%86%E6%96%B9%E7%A8%8B%E6%95%B0%E5%80%BC%E6%96%B9%E6%B3%95%E8%AE%B2%E5%BA%A7%E7%AC%94%E8%AE%B0/</url>
    <content><![CDATA[<div id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">
  <div class="hbe-input-container">
  <input type="password" id="hbePass" placeholder="" />
    <label for="hbePass">You can contact me for a password</label>
    <div class="bottom-line"></div>
  </div>
  <script id="hbeData" type="hbeData" data-hmacdigest="52c96c2a64998c353628d8214957da6258bd6f75e9a716ef66ec062bd6de22fe">03356be1501e653ebcfaa2a06aa65fe8663bc6d8d4ac37b72fcf2bdfea3e15a4cd90f65bbfb3ea37b1c28fe1b7a224e740d5d01df9f3ea597e268d5f0abdcdafa6ab3554ef6104400f37d0d8c7745973049af02f09ccf3fc655a5ac0d23a0ebed9e82fcf97150b2bcb50db0f78564abbc3adfba900babdc1238df9d1ed62ae9da33d41e861b93d19ed31aad7bd3e60cfde05e675a80105d9ec27341b461015bd0cb82ea22830b4d8e2487aa9cd64fdfe43f893f88e677bbfd794b3b254492e4a17fdfdb0e4ff316a97f4f0059590fb1e089f5ea53a3cfbc4994d3e4ab763f7ad3a7f814454841aa242a1a6b07e5bb6a04795b432d7ed4ddc061b3bdd895806b07129ee9f5e10e817474cb5a3abdcece48ae57f97602a56a082506b8d89102c3134b4cd74c3dde237f43195ad002d1bd371e7ecd91e6a51e5b34f403c5eb881e7c726aca5580dd00af7d4a9b1b09dc83cab26bef5450548bba391ce60136de6587dc338ceb2745fa80610b8454f34a2c835bdf0161abda37f71f54f28e2b07bc66c0ec9ab3a6cafa669fdd6cdbaa6713aadd970df98788b2d5f2a3069052549027f4ad95cc161c0a02b927d518996eef5f750e57e98aee179eaacdd8784870e74b0bb6afea2810cf4e6485e2ce56d55b72092d2a795c8af3289f399986b50388bdc8974e81d90505cfc2648c9a05e09515c28e615c660976cf557293bb8669f66cf592c4bdb12e04924efd60e82c9192549722dca90f3e086cdcc527de1d820ee1f1fc36830a37ad5756b2c4a081b3fa2d6ef03f432f4463036b0adf66bd1cb9996f9a9982760b923af5fbc009ec9b48560a74c7dda77d877233ad8a3b8e7995ec52b3d42628611ee69326f8db6a06aaac623a4b6299b66c31915798d08ef38c937187aa84821feaf594132ddc0c16f71d9c6c24235ada281b56a66752ab6b4a181f85a07455b0ccdcfcfe3284a37a140ce3a4b66fb9be3ef0fcd841960ad17efeead13c1ed57451221f717d3fc7e2fd899c856fc1477a640cbd89c54ab6e1b372da949369c8c3027169aa43f8b2a4d3d68bcbb36dac6c109166b7b43c5b651b0232165dc879d3bffd156808b2b0141d5a276defcfce10e51a0dc2015985a1de05990203c4b25cdcfb141482638df5ac2261b583c24eb1d81d519fdd57a2f58d8f0c82cbfb911af9ee5bfc90b2aa41163c93824b5c6357fb4e4da4efe696a98cd1cad0c7df14a1e9a034afb0410c195d8202100535af4ff830b48560167be4368178dcba99255db925dcd38b7bb325b780d82f2dc9c47f5e70b09a677425b989accb5ba914934ad2effd93d750c11aa79a00a1925695a7e1d7c2511b20889741520b742d9f3f5237f50a8fd9930690f63681432f2d32eaa814b97b9879378e1c2ee9475529623e84d9af6fd6820831e39ceb8527e0c2c25c4b304d2c4b0489bc030c2354399788ba5079fee10f27e968cc7258214d60281ac150b2f51d5099b9a8af5dc575b3de5560ae3811fc221386e57ee6cbd9a84c01b9b8343e7b3e67924ed5a0ac8b3b789a45127bcd3bb513d0cc5743d3333d2a79b97629bcacde55e1eb7be84c7b1f360aa69f5523b92231f921fc06de97c1d73014e4941b12667f9a47d4de6e16c3eb65c53b006425b63b8388b519a670683a076b215891c1eaf03db59889dce550a5e3ea7baeabb2d9fe2355a7ca69bf48a2ff734ea0b69ffa3d533a22b68541b9d437d6d5f94390f8f4134512899079fcaddaaa1d44e217a478d7155a07023bbce41d9075c429b338147eb17174f77f0dcdfdc9d22f819c8e02a4be45259af981e8863522711846e4f12f4869a93539b1e65182592b5f887c8075e27aeb2478270b980d7f5f7cd9570d350a400b2ae6ec0d54b862fc5bf1fa43210a8cfc90770881c5f962020975825e8ad2c065118139f8f1e647e6705dc042ad8014d86fdf3a132a3345d89b3ca411af14b0e0d74281ab175eb1a6070b05af10cbf1c339de277f2f43931198e1f92480bb1a65be31955e18844f3403488c64fd744dbe58eed9fff9f3fba8d8ffcbe08c4432ea25c010500d55cca068029312455377d48345aef05c883744595168fd8742f8ad00557211ddf714f2aeb63ba55ae459bc28c8a38f05f287f596c3c02db1d2e040d93c103ff8ab6a123c378e0721849d12657a7961ee86fd6d46b466bd12fbc7cff7589b7b975135021d66fd45a5325c6c22e11cc69183b5fb4a4bc0785079e3668fc79d1c0f3eef76a207bd2d57e0eeba9d8255e8d55cad7c8f3805df2c44580a1686904a51cf668bbee3f96f93d9d2ad5f0e3dae6bfcc1ec1c7bdd4c4183b963d68202eaf28211944342a2643e6ca3d86c78ff6dac4c3b48159b2566f673c29fd95b610de001cb667d2d92485a64b7e182b2e463589094f98160e653a0e06366bfcc756a3229dfcf46cc56c798e0514b6a002e6c8a0c189de7a03b619d98797049f3c0bd45bbbf0f88a8ecc04a6697feda74e97d038b9884577ee8d1b5f9069570cac06d55abd984e9bbe23cdc347196e04b4cb1636df3475d15d221bd47bd6f61894f7a14d00cbb6e178e615e4536841a2cdce72ebaedefd2bc0a4984fe73282cd3c0c99c7ab7e6d2bda0e313d46c6838f9538bd4073a4bbb92ee3ffb950e2d2c99b137c8de21c899339c2f54836710f920fbb10bec6afe8ecfc07a32d44ead3aff9646f49f086ef4bd60738a273c0c0c96a78a75650e8f86ec766933a7ee547f0754e7f378b991edd695fc376cb99eb0d8fbc05c1c042c0d1c35b0c55944d27054b3edd71f35ed44d7480627964fc5dd4261b1b1721d618ddd0ce09f8b71be461ac75e7156a7fa4176c463e0c4ea5e6d5e0128fbd3abf2e0a47c3bbd9a8ad8f66d97e8abf6841cce60861b9ddfee627b30f8a46edef74c194848bf3ea5b210c832b4c168d2a76e9dc282e2d5074de576a40b9025aeff7c889a4f5b1a16725102670b82380f2e1666e32c3e5dce658692eeb326f6233e6d241004d6ae9ef2b32d1e22b5b1c4077d784e1876792b98ccb1d58f02d7a77438f0d46203e831a33d917f5e49151c1e8b9c4e11c9fb3ca8a012700e5c99a7067c637e3970097a59eaaa1f7bf17de7a8e34577f4dcd06784a543dd98a0f6069169dde7985be9ec6462f7783e996ef073129081c9baf2160f648b1e9c3c162cb38a39d15873ae2b557c8914a5d59584ca85b520ca6c2a36012adc2b6f6c2c414d9829844490159dbdab0014fa6e9098057c361c566452bcbfcfe4b1344a4f7e6be6e98a79b9e6512519d22dfe32f6702aebbf6857b0b33f9f85373e6a0f34324d8a64bf7d5673a35d79f1e532f71c4f6d47f60a46bc8341c56dcd97209546c3d519592a23b7317f5438ea790b4d5dd176a976ca999ef1b9694d461f5fbffeb4afd25d1e07e565ddbfd6f5d4e8c5a6e32a72ae1f030c2c65cecc1eeb505cdce52d13bf29780c04c5fed0de1c0971a4ab081af415c3fe6605797198f5b29807928fcbac2ae1e42b4985ee8fa104ff2096162b0ef23f1ac64620ef56993bb222f5eacb562c1d1a9fb8d6bc028a8da3dca1298f491e22174d03c2668f613fda9152b3a091d9ebc1bdceac8b014ee73ae3dfdee1f1dfe72cce9ce7002b087f519f6482627637e0daec5467ad2e251ef71e487039b60b293e309c1250648237d0f4d85e6b558796042e88bc379d93fec3451c5fbcc36b4c0fd23c521599843bd6ba2f00500cf82f12c471dc060da44059bc521c1731ea7993416d3059d8d04729a4513e8824926ece5f62cec84e94987f39fe9ddb45906537d9576d4fcc776d5744b5d9482a23c1ff885051a502ba7571950933a2de61d0d2c577c56fe1bb746a0a7c9f135453782940a7a4aa326523d07bda638af0536e08240be274ddef592f4f3618990cb51bc1e8258597a53da60ca0bce53b2f31311a2ce0a46ec18ce118a92f8044bdad0ab2d2bac38ce91ac97eba01976640015e5d1140323c2e9e8879c86207f8565c55e882759c86a6bee7bd28f0513bc0698e07c5cb4694b272c69fe4639d0c9618ff1a8ae0761d752eaccbc156e08104a29635c7b5c8b8e17ff14840a135cbbf3f9b2ad934a152f909459cdaea5635606003c9f6cec9d5be3d78ca420ca5f4a6297aec55aafc06d01ccc9c060b5da0635c3e6a242ed1f7b5e462222543ed167a26258db925530bf67bca7f70b5bc02887e3291ff4c846c51ef040458a1ea6b1b7f595f145e6a241d0e0695bfd34b3ff35cecad9fe10e70b38c0201d26d95034a9e334bc32fdb8aad8d1b9598d001597695797f39cb253e2fa62d07e1765c52ca2b45a30d3d71e45dfce07050d9877e70e2599252d1b92dcba206f260535fac1b9f80a71655cbdad1c9bc5ac3d7713e566c036c799e369a21b5174e8611d56809768a50b24de413c960f533d83ee6efc7c6a8e68c85ad33297a44465d6e8f89c8813736f0f30d4a371870dbf4bb58c1fb7502e089971e992b12d15aac78f2eed49c6361aa5da3f845eb77e557160ed612a89fb34a8568d783c4508720a0e2a5e5acbdbd892ce00a61ac875b96e65962a940e6f6a39da7cf09b3c6b5167c7f02a56641194cc7a9a4e2b0370195a6e4da9cf8a6e5ba4d9ed16c308deff2d7104d0b591300765dcfad09cd5128e2ece9bf6aadfd2a0be05c2e4910654ba049688cd7373c3d1df091a38b36465105d8f02db95de4f0a00817462a5370bd692464acd006088be574b272de2fa5759cfb26325a73f7595687a65b96780d2e55bd6f3d813ca9a3ead928699dd6c4fe289f45bc6f7e914bc79cc26afb4d3b93779e121d61a16b4e0cc1de0055d60804126aba4b18b66e27d6ea2d619dc2c0c441b8ce99049dc2d67fb34457d725be2b81db5d67c8d540610ce</script>
</div>
<script src="/lib/blog-encrypt.js"></script><link href="/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
      <tags>
        <tag>Science</tag>
      </tags>
  </entry>
  <entry>
    <title>MarkDown语法总结</title>
    <url>/2020/06/14/MarkDown%E8%AF%AD%E6%B3%95%E6%80%BB%E7%BB%93/</url>
    <content><![CDATA[<p>markdown语法备忘录<br><a id="more"></a></p>
<h1 id="区块元素"><a href="#区块元素" class="headerlink" title="区块元素"></a>区块元素</h1><h2 id="区块引用"><a href="#区块引用" class="headerlink" title="区块引用"></a>区块引用</h2><p>如果你要引用某一区块，你可以在每一行的行首插入一个 &gt;  例如：</p>
<blockquote>
<p>This is a blockquote with two paragraphs. Lorem ipsum dolor sit amet,<br>consectetuer adipiscing elit. Aliquam hendrerit mi posuere lectus.<br>Vestibulum enim wisi, viverra nec, fringilla in, laoreet vitae, risus.</p>
<p>Donec sit amet nisl. Aliquam semper ipsum sit amet velit. Suspendisse<br>id sem consectetuer libero luctus adipiscing.</p>
</blockquote>
<p>也可以只在引用区块每一个markdown段落的第一行的行首插入 &gt; ：</p>
<blockquote>
<p>This is a blockquote with two paragraphs. Lorem ipsum dolor sit amet,<br>consectetuer adipiscing elit. Aliquam hendrerit mi posuere lectus.<br>Vestibulum enim wisi, viverra nec, fringilla in, laoreet vitae, risus.</p>
<p>Donec sit amet nisl. Aliquam semper ipsum sit amet velit. Suspendisse<br>id sem consectetuer libero luctus adipiscing.</p>
</blockquote>
<p>markdown支持区块引用的嵌套：</p>
<blockquote>
<p>This is the first level of quoting.</p>
<blockquote>
<p>This is nested bl<br>Back to the first level.</p>
</blockquote>
</blockquote>
<p>引用区块内可以含有其它markdown元素， 包括标题，列表和代码块：</p>
<blockquote>
<h2 id="This-is-a-header"><a href="#This-is-a-header" class="headerlink" title="This is a header."></a>This is a header.</h2><ol>
<li>This is the first list item.</li>
<li>This is the second list item.</li>
</ol>
<p>Here’s some example code:</p>
<pre><code>return shell_exec(&quot;echo $input | $markdown_script&quot;);
</code></pre></blockquote>
<h1 id="链接"><a href="#链接" class="headerlink" title="链接"></a>链接</h1><p>markdown支持两种形式的链接：行内式和参考式。</p>
<h2 id="行内式"><a href="#行内式" class="headerlink" title="行内式"></a>行内式</h2><p>行内式：<a href="URL “可选的链接的title属性”">链接文字</a>。 例如：</p>
<p>This is <a href="http://example.com/" title="Title">an example</a> inline link.</p>
<p><a href="http://example.net/" target="_blank" rel="noopener">This link</a> has no title attribute.</p>
<h2 id="参考式"><a href="#参考式" class="headerlink" title="参考式"></a>参考式</h2><p>参考式：<a href="URL" title="可选的连接的title属性">链接文字</a>。然后， 在文档的任意一行，定义链接：</p>
<h1 id="代码块"><a href="#代码块" class="headerlink" title="代码块"></a>代码块</h1><p>代码块由缩进的一行或连续多行组成。当翻译成html时，代码块前后会分别加上<code>&lt;pre&gt;&lt;code&gt;</code>和<code>&lt;/code&gt;&lt;/pre&gt;</code>标签。例如，下列markdown：</p>
<p>This is a normal paragraph:</p>
<pre><code>This is a code block.
</code></pre><h2 id="行内代码块"><a href="#行内代码块" class="headerlink" title="行内代码块"></a>行内代码块</h2><p>Use the <code>printf()</code> function.</p>
<h1 id="强调"><a href="#强调" class="headerlink" title="强调"></a>强调</h1><blockquote>
<p>如果需要强调某些文字，可以使用 * 或 _ 包围它们。</p>
</blockquote>
<p><em>single asterisks</em></p>
<p>_single underscores_</p>
<p><strong>double asterisks</strong></p>
<p><strong>double underscores</strong></p>
<h2 id="超链接"><a href="#超链接" class="headerlink" title="超链接"></a>超链接</h2><p><a href="https://space.bilibili.com/27496282" target="_blank" rel="noopener">我的bilibili主页</a></p>
<h2 id="图片"><a href="#图片" class="headerlink" title="图片"></a>图片</h2><p><img src="https://images.wallpaperscraft.com/image/hologram_scheme_scifi_139294_3840x2160.jpg" alt="壁纸"></p>
<h1 id="列表"><a href="#列表" class="headerlink" title="列表"></a>列表</h1><h2 id="无序列表"><a href="#无序列表" class="headerlink" title="无序列表"></a>无序列表</h2><ul>
<li>无序列表项</li>
</ul>
<ul>
<li>无序列表项</li>
</ul>
<ul>
<li>无序列表项</li>
</ul>
<h2 id="有序列表"><a href="#有序列表" class="headerlink" title="有序列表"></a>有序列表</h2><ul>
<li>无序列表项<ul>
<li>第二层列表项</li>
<li>第二层列表项</li>
</ul>
</li>
<li>无序列表项</li>
<li>无序列表项</li>
</ul>
<h2 id="有序列表数字标识"><a href="#有序列表数字标识" class="headerlink" title="有序列表数字标识"></a>有序列表数字标识</h2><ol>
<li>有序列表项1</li>
<li>有序列表项2</li>
<li>有序列表项3</li>
</ol>
<h2 id="有序多级列表数字标识"><a href="#有序多级列表数字标识" class="headerlink" title="有序多级列表数字标识"></a>有序多级列表数字标识</h2><ol>
<li>有序列表项1<ol>
<li>有序列表项11</li>
<li>有序列表项12</li>
</ol>
</li>
<li>有序列表项3</li>
</ol>
<h1 id="分割线"><a href="#分割线" class="headerlink" title="分割线"></a>分割线</h1><hr>
<hr>
<hr>
<hr>
<iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width="330" height="86" src="//music.163.com/outchain/player?type=2&id=1642632&auto=0&height=66"></iframe>]]></content>
      <tags>
        <tag>随笔</tag>
      </tags>
  </entry>
</search>
